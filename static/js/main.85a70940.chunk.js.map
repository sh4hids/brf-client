{"version":3,"sources":["assets/images/bg.svg","state/ducks/auth/types.js","state/ducks/auth/reducers.js","state/ducks/auth/actions.js","state/ducks/auth/index.js","state/ducks/donations/reducers.js","state/ducks/donations/actions.js","state/ducks/donations/types.js","state/ducks/donations/index.js","state/ducks/users/reducers.js","state/ducks/users/actions.js","state/ducks/users/types.js","state/ducks/users/index.js","state/ducks/madrasas/reducers.js","state/ducks/madrasas/actions.js","state/ducks/madrasas/types.js","state/ducks/madrasas/index.js","helpers/with-auth.js","utils/axios.js","config/index.js","helpers/api-service.js","state/store.js","views/styles/global-styles.js","views/kits/button.js","views/kits/container.js","views/kits/custom-grid.js","views/kits/devider.js","views/kits/fullpage-bg.js","views/kits/go-to.js","views/kits/input-container.js","views/kits/section-header.js","views/kits/styled-text.js","views/kits/table.js","views/kits/table-pagination.js","utils/object-utils.js","views/kits/text.js","views/layouts/default-layout.js","views/components/main-menu.js","views/components/select-input.js","views/components/styled-datepicker.js","views/layouts/main-layout.js","views/pages/404.js","state/ducks/locations/actions.js","state/ducks/locations/types.js","utils/select-option-utils.js","views/components/add-user/add-user-form.js","views/pages/add-user-page.js","views/components/donations/create-donation-form.js","views/components/donations/donation-request-card.js","views/components/donations/request-details.js","views/pages/donation-page.js","views/pages/feed-page.js","views/components/home/intro-section.js","views/components/home/login-form.js","views/pages/home-page.js","views/components/madrasas/add-madrasa-form.js","views/pages/madrasa-page.js","views/components/search-page/search-form.js","views/components/search-page/users-table.js","views/pages/search-page.js","views/containers/add-user-container.js","views/containers/donation-container.js","views/containers/feed-container.js","views/containers/home-container.js","views/containers/madrasa-container.js","views/containers/search-page-container.js","routes.js","views/styles/theme.js","App.js","serviceWorker.js","index.js","helpers/auth-service.js"],"names":["module","exports","LOGIN","initialState","isAuthenticated","token","redirectTo","signup","type","meta","async","blocking","path","method","body","email","username","phone","password","login","types","logout","setUserToken","payload","reducer","state","user","jwt","draftSignUp","donationRequests","requestDetails","makeRequest","data","updateRequest","id","serveRequest","getAllRequests","getRequestById","users","eligibleDonors","addUser","updateUserInfo","getAllUsers","blood_group","madrasa","place","gender","role","encodeURIComponent","getEligibleDonors","mobile","madrasas","addMadrasa","getAllMadrasas","withAuth","WrappedComponent","WithAuthentication","this","props","to","Component","PropTypes","bool","connect","auth","parseStatus","status","res","Promise","resolve","reject","then","response","message","getJSON","a","requestHeaders","Authorization","Accept","fetch","url","options","headers","JSON","stringify","axios","server","Auth","AuthService","baseUrl","config","loginActions","apiService","next","action","result","Error","csrf","getCsrfToken","includes","setToken","setUser","removeToken","handleResponse","err","handleErrors","appReducer","combineReducers","reducers","rootReducer","GlobalStyle","createGlobalStyle","theme","typography","fontFamily","fontSize","colors","light","BaseButton","styled","button","caption","borders","primary","lighter","space","width","PrimaryButton","Button","children","variant","Container","div","css","color","height","textAlign","CustomGrid","Grid","Devider","hr","borderColor","FullpageBg","imgSrc","OnsiteLink","Link","OffsiteLink","GoTo","link","href","InputContainer","border","borderBottom","borderRadius","lightDark","placeholder","SectionHeader","StyledText","span","fontWeight","Table","table","TablePagination","isDefined","ref","name","keys","split","shift","hasOwnProperty","dark","H1","h1","lineHeight","H2","h2","H3","h3","H4","h4","H5","h5","H6","h6","P","p","Caption","RawHTML","Text","html","dangerouslySetInnerHTML","__html","DefaultLayout","MenuContainer","MenuItem","li","mapActionsToProps","authActions","className","onClick","SelectContainer","customStyles","indicatorsContainer","provided","option","singleValue","opacity","isDisabled","transition","SelectInput","handleChange","value","onChange","keyName","handleBlur","onBlur","margin","padding","size","selectClass","styles","classNamePrefix","error","touched","mt","DatepickerContainer","StyledDatepicker","mb","MainLayout","pl","NotFoundPage","valign","halign","Unit","xs","sm","addLocation","getAllLocations","generateSelectOptions","length","selectOptions","i","push","label","UserFormComponent","madrasaOptions","locationOptions","handleClearForm","resetForm","selectedLocation","selectedGender","selectedRole","selectedMadrasa","selectedBloodGroup","date_of_birth","address","last_donated_on","last_received_on","emergency_contact_name","emergency_contact_phone","locations","count","results","setState","errors","setFieldValue","setFieldTouched","values","m","pr","isMulti","placeholderText","selected","showMonthDropdown","showYearDropdown","dropdownMode","dateFormat","showTimeSelect","timeFormat","onClear","AddUserForm","withFormik","mapPropsToValues","validationSchema","Yup","shape","required","nullable","handleSubmit","setErrors","setSubmitting","onAddUser","history","toISOString","newUser","console","log","madrasaActions","locationActions","userActions","withRouter","AddUserPage","bg","pb","appEl","document","getElementById","Modal","setAppElement","overlay","backgroundColor","content","top","left","right","bottom","marginRight","transform","CreateDonationFormComponent","userOptions","isModalOpen","selectedUser","request_date","reason","handleOpenModal","handleCloseModal","handleAddUser","pt","mr","component","isOpen","onRequestClose","style","contentLabel","CreateDonationForm","receiver","newRequest","donationActions","DonationRequestCard","request","showDevider","useState","showRequestDetails","setShowRequestDetails","format","Date","requestId","RequestDetailsContent","undefined","donorOptions","searchEligibleDonors","inputValue","searchDebounced","AwesomeDebouncePromise","donors","reqInfo","is_served","selectedDonor","defaultOptions","loadOptions","donation_date","RequestDetails","donor","servedReq","donations","DonationPage","showRequestForm","setShowRequestForm","map","key","FeedPage","IntroSection","LoginFormComponent","maxWidth","LoginForm","HomePage","bgImage","contact_person","phoe","newMadrasa","MadrasaPage","filter","UsersTable","previous","SearchPage","userMessage","UsersContainer","DonationContainer","FeedContainer","HomeContainer","MadrasaContainer","SearchPageContainer","Routes","exact","AddUserContainer","secondary","success","warning","breakpoints","md","lg","xl","App","basename","window","location","pathname","Boolean","hostname","match","loggedIn","getToken","store","preloadedState","middlewares","thunk","storeEnhancers","applyMiddleware","composedEnhancer","composeWithDevTools","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","req","jsCookie","set","expires","getUser","process","browser","getUserFromBrowser","getUserFromServer","get","cookies","cookie","cookiesData","jsHttpCookie","parse","getTokenFromBrowser","getTokenFromServer","Token","getCsrfFromBrowser","getCsrfFromServer","csrftoken","remove"],"mappings":"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","file":"static/js/main.85a70940.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.e36e78ea.svg\";","export const RESET_FORM_DATA = 'auth/reset_form_data';\n\nexport const SIGNUP = 'auth/signup';\nexport const SIGNUP_COMPLETED = 'auth/signup_completed';\nexport const SIGNUP_FAILED = 'auth/signup_failed';\n\nexport const RESET_PASSWORD = 'auth/reset_password';\nexport const RESET_PASSWORD_COMPLETED = 'auth/reset_password_completed';\nexport const RESET_PASSWORD_FAILED = 'auth/reset_password_failed';\n\nexport const LOGIN = 'auth/login';\nexport const LOGIN_COMPLETED = 'auth/login_completed';\nexport const LOGIN_FAILED = 'auth/login_failed';\n\nexport const FB_LOGIN = 'auth/fb_login';\nexport const FB_LOGIN_COMPLETED = 'auth/fb_login_completed';\nexport const FB_LOGIN_FAILED = 'auth/fb_login_failed';\n\nexport const LINKEDIN_LOGIN = 'auth/linkedin_login';\nexport const LINKEDIN_LOGIN_COMPLETED = 'auth/linkedin_login_completed';\nexport const LINKEDIN_LOGIN_FAILED = 'auth/linkedin_login_failed';\n\nexport const GOOGLE_LOGIN = 'auth/google_login';\nexport const GOOGLE_LOGIN_COMPLETED = 'auth/google_login_completed';\nexport const GOOGLE_LOGIN_FAILED = 'auth/google_login_failed';\n\nexport const LOGOUT = 'auth/logout';\nexport const LOGOUT_COMPLETED = 'auth/logout_completed';\nexport const LOGOUT_FAILED = 'auth/logout_failed';\n\nexport const INITIALIZE = 'auth/initialize_auth';\n\nexport const SET_LOGGED_IN_USER = 'auth/set_logged_in_user';\nexport const SET_USER_TOKEN = 'auth/set_user_token';\nexport const SET_USER_UNAUTHORIZED = 'auth/set_user_unauthorized';\n","import * as types from './types';\n\nconst initialState = {\n  isAuthenticated: false,\n  token: '',\n  redirectTo: '/',\n};\n\nconst authReducers = function(state = initialState, { type, payload }) {\n  switch (type) {\n    case types.SIGNUP_COMPLETED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: {\n          ...payload.user,\n        },\n        jwt: payload.token,\n        draftSignUp: {},\n        redirectTo: '/dashboard',\n      };\n    case types.LOGIN_COMPLETED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        token: payload.token,\n        redirectTo: '/',\n      };\n    case types.LOGIN_FAILED:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case types.LOGOUT_COMPLETED || types.LOGOUT_FAILED:\n      return {\n        ...state,\n        isAuthenticated: false,\n        token: '',\n        redirectTo: '/',\n      };\n    case types.SET_USER_TOKEN:\n      return {\n        ...state,\n        isAuthenticated: payload ? true : false,\n        jwt: payload,\n      };\n    case types.RESET_PASSWORD_COMPLETED:\n      return {\n        ...state,\n        redirectTo: '/login',\n      };\n    case types.SET_USER_UNAUTHORIZED:\n      return {\n        ...state,\n        isAuthenticated: false,\n        token: '',\n        redirectTo: '/login',\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducers;\n","import * as types from './types';\n\nexport const signup = ({ email, username, phone, password }) => ({\n  type: types.SIGNUP,\n  meta: {\n    async: true,\n    blocking: true,\n    path: `signup`,\n    method: 'POST',\n    body: {\n      email,\n      username,\n      phone,\n      password,\n    },\n  },\n});\n\nexport const login = ({ username, password }) => ({\n  type: types.LOGIN,\n  meta: {\n    async: true,\n    blocking: true,\n    path: `/api-token-auth/`,\n    method: 'POST',\n    body: { username, password },\n  },\n});\n\nexport const logout = token => {\n  return {\n    type: types.LOGOUT,\n    meta: {\n      async: true,\n      blocking: true,\n      path: `/api-auth/logout/`,\n      method: 'POST',\n      token,\n    },\n  };\n};\n\nexport const setUserToken = token => ({\n  type: types.SET_USER_TOKEN,\n  payload: token,\n});\n","import reducer from './reducers';\nimport * as authActions from './actions';\n\nexport { authActions };\nexport default reducer;\n","import * as types from './types';\n\nconst initialState = {\n  donationRequests: {},\n  requestDetails: {},\n};\n\nconst donationReducers = function(state = initialState, { type, payload }) {\n  switch (type) {\n    case types.GET_ALL_REQUESTS_COMPLETED:\n      return {\n        ...state,\n        donationRequests: {\n          ...payload,\n        },\n      };\n    case types.GET_REQUEST_BY_ID_COMPLETED:\n      return {\n        ...state,\n        requestDetails: payload,\n      };\n    case types.UPDATE_REQUEST_COMPLETED:\n      return {\n        ...state,\n        requestDetails: payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default donationReducers;\n","import * as types from './types';\n\nexport const makeRequest = (data, token) => ({\n  type: types.MAKE_REQUEST,\n  meta: {\n    async: true,\n    blocking: true,\n    path: `/blood_requests/`,\n    method: 'POST',\n    body: data,\n    token,\n  },\n});\n\nexport const updateRequest = (id, data, token) => ({\n  type: types.UPDATE_REQUEST,\n  meta: {\n    async: true,\n    blocking: true,\n    path: `/blood_requests/${id}/`,\n    method: 'PATCH',\n    body: data,\n    token,\n  },\n});\n\nexport const serveRequest = (data, token) => ({\n  type: types.SERVE_REQUEST,\n  meta: {\n    async: true,\n    blocking: true,\n    path: `/history/`,\n    method: 'POST',\n    body: data,\n    token,\n  },\n});\n\nexport const getAllRequests = token => ({\n  type: types.GET_ALL_REQUESTS,\n  meta: {\n    async: true,\n    blocking: true,\n    path: `/blood_requests/`,\n    method: 'GET',\n    token,\n  },\n});\n\nexport const getRequestById = (id, token) => ({\n  type: types.GET_REQUEST_BY_ID,\n  meta: {\n    async: true,\n    blocking: true,\n    path: `/blood_requests/${id}/`,\n    method: 'GET',\n    token,\n  },\n});\n","export const MAKE_REQUEST = 'donations/make_request';\nexport const MAKE_REQUEST_COMPLETED = 'donations/make_request_completed';\nexport const MAKE_REQUEST_FAILED = 'donations/make_request_failed';\n\nexport const UPDATE_REQUEST = 'donations/update_request';\nexport const UPDATE_REQUEST_COMPLETED = 'donations/update_request_completed';\nexport const UPDATE_REQUEST_FAILED = 'donations/update_request_failed';\n\nexport const SERVE_REQUEST = 'donations/serve_request';\nexport const SERVE_REQUEST_COMPLETED = 'donations/serve_request_completed';\nexport const SERVE_REQUEST_FAILED = 'donations/serve_request_failed';\n\nexport const GET_ALL_REQUESTS = 'donations/get_all_requests';\nexport const GET_ALL_REQUESTS_COMPLETED =\n  'donations/get_all_requests_completed';\nexport const GET_ALL_REQUESTS_FAILED = 'donations/get_all_requests_failed';\n\nexport const GET_REQUEST_BY_ID = 'donations/get_request_by_id';\nexport const GET_REQUEST_BY_ID_COMPLETED =\n  'donations/get_request_by_id_completed';\nexport const GET_REQUEST_BY_ID_FAILED = 'donations/get_request_by_id_failed';\n","import reducer from './reducers';\nimport * as donationActions from './actions';\n\nexport { donationActions };\nexport default reducer;\n","import * as types from './types';\n\nconst initialState = {\n  users: {},\n  eligibleDonors: {},\n};\n\nconst userReducers = function(state = initialState, { type, payload }) {\n  switch (type) {\n    case types.GET_ALL_USERS_COMPLETED:\n      return {\n        ...state,\n        users: {\n          ...payload,\n        },\n      };\n    case types.GET_ELIGIBLE_DONORS_COMPLETED:\n      return {\n        ...state,\n        eligibleDonors: {\n          ...payload,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducers;\n","import * as types from './types';\n\nexport const addUser = (data, token) => ({\n  type: types.ADD_USER,\n  meta: {\n    async: true,\n    blocking: true,\n    path: `/persons/`,\n    method: 'POST',\n    body: data,\n    token,\n  },\n});\n\nexport const updateUserInfo = (id, data, token) => ({\n  type: types.UPDATE_USER_INFO,\n  meta: {\n    async: true,\n    blocking: true,\n    path: `/persons/${id}/`,\n    method: 'PATCH',\n    body: data,\n    token,\n  },\n});\n\nexport const getAllUsers = (\n  token,\n  { blood_group, madrasa, place, gender, role }\n) => ({\n  type: types.GET_ALL_USERS,\n  meta: {\n    async: true,\n    blocking: true,\n    path: `/persons/?blood_group=${\n      blood_group ? encodeURIComponent(blood_group) : ''\n    }&madrasa=${madrasa || ''}&place=${place || ''}&gender=${gender ||\n      ''}&role=${role || ''}`,\n    method: 'GET',\n    token,\n  },\n});\n\nexport const getEligibleDonors = (\n  token,\n  { blood_group, madrasa, place, gender, role, mobile }\n) => ({\n  type: types.GET_ELIGIBLE_DONORS,\n  meta: {\n    async: true,\n    blocking: true,\n    path: `/persons/eligible_donors/?blood_group=${\n      blood_group ? encodeURIComponent(blood_group) : ''\n    }&madrasa=${madrasa || ''}&place=${place || ''}&gender=${gender ||\n      ''}&role=${role || ''}&mobile=${mobile}`,\n    method: 'GET',\n    token,\n  },\n});\n","export const ADD_USER = 'users/add_user';\nexport const ADD_USER_COMPLETED = 'users/add_user_completed';\nexport const ADD_USER_FAILED = 'users/add_user_failed';\n\nexport const UPDATE_USER_INFO = 'users/update_user_info';\nexport const UPDATE_USER_INFO_COMPLETED = 'users/update_user_info_completed';\nexport const UPDATE_USER_INFO_FAILED = 'users/update_user_info_failed';\n\nexport const GET_ALL_USERS = 'users/get_all_users';\nexport const GET_ALL_USERS_COMPLETED = 'users/get_all_users_completed';\nexport const GET_ALL_USERS_FAILED = 'users/get_all_users_failed';\n\nexport const GET_ELIGIBLE_DONORS = 'users/get_eligible_donors';\nexport const GET_ELIGIBLE_DONORS_COMPLETED =\n  'users/get_eligible_donors_completed';\nexport const GET_ELIGIBLE_DONORS_FAILED = 'users/get_eligible_donors_failed';\n","import reducer from './reducers';\nimport * as userActions from './actions';\n\nexport { userActions };\nexport default reducer;\n","import * as types from './types';\n\nconst initialState = {\n  madrasas: {},\n};\n\nconst madrasaReducers = function(state = initialState, { type, payload }) {\n  switch (type) {\n    case types.GET_ALL_MADRASAS_COMPLETED:\n      return {\n        ...state,\n        madrasas: {\n          ...payload,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default madrasaReducers;\n","import * as types from './types';\n\nexport const addMadrasa = (data, token) => ({\n  type: types.ADD_MADRASA,\n  meta: {\n    async: true,\n    blocking: true,\n    path: `/madrasas/`,\n    method: 'POST',\n    body: data,\n    token,\n  },\n});\n\nexport const getAllMadrasas = token => ({\n  type: types.GET_ALL_MADRASAS,\n  meta: {\n    async: true,\n    blocking: true,\n    path: `/madrasas/`,\n    method: 'GET',\n    token,\n  },\n});\n","export const ADD_MADRASA = 'madrasas/add_madrasa';\nexport const ADD_MADRASA_COMPLETED = 'madrasas/add_madrasa_completed';\nexport const ADD_MADRASA_FAILED = 'madrasas/add_madrasa_failed';\n\nexport const GET_ALL_MADRASAS = 'madrasas/get_all_madrasas';\nexport const GET_ALL_MADRASAS_COMPLETED = 'madrasas/get_all_madrasas_completed';\nexport const GET_ALL_MADRASAS_FAILED = 'madrasas/get_all_madrasas_failed';\n","import reducer from './reducers';\nimport * as madrasaActions from './actions';\n\nexport { madrasaActions };\nexport default reducer;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nexport default function withAuth(WrappedComponent) {\n  class WithAuthentication extends Component {\n    render() {\n      const { isAuthenticated } = this.props;\n\n      return (\n        <Fragment>\n          {isAuthenticated ? (\n            <WrappedComponent {...this.props} />\n          ) : (\n            <Redirect to=\"/\" />\n          )}\n        </Fragment>\n      );\n    }\n  }\n\n  const { bool } = PropTypes;\n  WithAuthentication.propTypes = {\n    isAuthenticated: bool.isRequired,\n  };\n\n  const mapStateToProps = ({ auth }) => ({\n    isAuthenticated: auth.isAuthenticated,\n  });\n\n  return connect(mapStateToProps)(WithAuthentication);\n}\n","import axios from 'axios';\n\nconst fetch = async ({ url, method, body, type, token }) => {\n  const options = {\n    method,\n    headers: requestHeaders(token, type),\n    data:\n      method !== 'GET'\n        ? type !== 'multipart'\n          ? JSON.stringify(body)\n          : body\n        : null,\n  };\n\n  const res = await axios(url, options);\n  return parseStatus(res.status, getJSON(res));\n};\n\nfunction parseStatus(status, res) {\n  return new Promise((resolve, reject) => {\n    if (status >= 200 && status < 300) {\n      res.then(response => resolve(response));\n    } else {\n      res.then(response => {\n        return reject({ status, message: response });\n      });\n    }\n  });\n}\n\nasync function getJSON(response) {\n  if (response.status === 204) return '';\n\n  try {\n    const data = await response.data;\n    return data;\n  } catch (err) {\n    return err;\n  }\n}\n\nfunction requestHeaders(token, type) {\n  if (type && type === 'multipart') {\n    return {\n      Authorization: token ? `Token ${token}` : '',\n    };\n  }\n\n  return {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    Authorization: token ? `Token ${token}` : '',\n  };\n}\n\nexport default fetch;\n","export const server = process.env.REACT_APP_SERVER || `http://localhost:8000`;\nexport const apiVersion = process.env.REACT_APP_API_VERSION || `/api/v1`;\nexport const client = process.env.REACT_APP_CLIENT || `http:localhost:3000`;\n","import fetch from '../utils/axios';\nimport * as config from '../config';\nimport * as types from '../state/ducks/auth/types';\nimport AuthService from './auth-service';\n\nconst Auth = new AuthService();\nconst baseUrl = `${config.server}${config.apiVersion}`;\nconst loginActions = [\n  types.LOGIN,\n  types.SIGNUP,\n  types.FB_LOGIN,\n  types.LINKEDIN_LOGIN,\n  types.GOOGLE_LOGIN,\n];\n\nconst apiService = () => next => action => {\n  const result = next(action);\n  if (!action.meta || !action.meta.async) {\n    return result;\n  }\n\n  const { path, method = 'GET', body, type, token } = action.meta;\n\n  if (!path) {\n    throw new Error(`'path' not specified for async action ${action.type}`);\n  }\n\n  let url = `${baseUrl}${path}`;\n  const csrf = Auth.getCsrfToken();\n\n  if (action.type === types.LOGIN) {\n    url = `${config.server}${path}`;\n  }\n\n  return fetch({ url, method, body, type, token, csrf }).then(\n    res => handleResponse(res, action, next),\n    err => handleErrors(err, action, next)\n  );\n};\n\nfunction handleErrors(err, action, next) {\n  if (action.type === 'auth/logout') {\n    Auth.removeToken();\n  }\n\n  if (err.status === 401) {\n    next({\n      type: `auth/set_user_unauthorized`,\n      payload: err,\n      meta: action.meta,\n    });\n  } else {\n    next({\n      type: `${action.type}_failed`,\n      payload: err,\n      meta: action.meta,\n    });\n  }\n\n  return Promise.reject(err);\n}\n\nfunction handleResponse(res, action, next) {\n  if (loginActions.includes(action.type)) {\n    let { user, token } = res;\n    user = {\n      ...user,\n    };\n    Auth.setToken(token);\n    Auth.setUser(user);\n  } else if (action.type === 'auth/logout') {\n    Auth.removeToken();\n  }\n\n  next({\n    type: `${action.type}_completed`,\n    payload: res,\n    meta: action.meta,\n  });\n\n  return res;\n}\n\nexport default apiService;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\nimport * as reducers from './ducks';\nimport { apiService } from '../helpers';\n\nconst appReducer = combineReducers(reducers);\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'auth/logout') {\n    state = {\n      ...state,\n      auth: {\n        isAuthenticated: false,\n        token: '',\n      },\n    };\n  }\n  return appReducer(state, action);\n};\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [apiService, thunk];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const storeEnhancers = [middlewareEnhancer];\n\n  const composedEnhancer = composeWithDevTools(...storeEnhancers);\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancer);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept(rootReducer, () => {\n      const nextRootReducer = rootReducer.default;\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    scroll-behavior: smooth;\n  }\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: ${({ theme }) => theme.typography.fontFamily};\n    font-size: ${({ theme }) => theme.typography.fontSize};\n    background-color: ${({ theme }) => theme.colors.light};\n    min-height: 100vh;\n  }\n  p {\n    line-height: 1.45;\n    font-size: 1em;\n    margin: 0;\n    padding: 0;\n  }\n  h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n    line-height: 1.15;\n  }\n  h1 {\n    font-size: 3.052em;\n  }\n  h2 {\n    font-size: 2.441em;\n  }\n  h3 {\n    font-size: 1.953em;\n  }\n  h4 {\n    font-size: 1.563em;\n  }\n  h5 {\n    font-size: 1.25em;\n  }\n  h6 {\n    font-size: 1em;\n  }\n  :not(pre) > code[class*=\"language-\"], pre[class*=\"language-\"] {\n    background-color: #f0f8fb;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { space, width } from 'styled-system';\n\nconst BaseButton = styled.button`\n  outline: none;\n  width: 100%;\n  height: 48px;\n  cursor: pointer;\n  border-radius: 4px;\n  text-transform: uppercase;\n  font-size: ${({ theme }) => theme.typography.caption.fontSize};\n  border: ${({ theme }) => theme.borders.primary};\n  color: ${({ theme }) => theme.colors.primary};\n  background-color: ${({ theme }) => theme.colors.lighter};\n\n  &.btn-small {\n    height: 40px;\n  }\n\n  ${space};\n  ${width};\n`;\n\nconst PrimaryButton = styled(BaseButton)`\n  outline: none;\n  border: none;\n  color: ${({ theme }) => theme.colors.lighter};\n  background-color: ${({ theme }) => theme.colors.primary};\n`;\n\nconst Button = ({ children, variant, ...props }) => {\n  switch (variant) {\n    case 'primary':\n      return <PrimaryButton {...props}>{children}</PrimaryButton>;\n    default:\n      return <BaseButton {...props}>{children}</BaseButton>;\n  }\n};\n\nexport default Button;\n","import styled, { css } from 'styled-components';\nimport { color, height, width, space, textAlign } from 'styled-system';\n\nconst Container = styled.div`\n  ${({ variant }) =>\n    variant === 'main' &&\n    css`\n      width: 100vw;\n      margin: 0 auto;\n    `};\n  ${({ variant }) =>\n    variant === 'card' &&\n    css`\n      border-radius: 4px;\n      background-color: ${({ theme }) => theme.colors.lighter};\n    `};\n\n  ${color};\n  ${space};\n  ${height};\n  ${width};\n  ${textAlign};\n`;\n\nexport default Container;\n","import styled from 'styled-components';\nimport Grid from 'styled-components-grid';\nimport { height, space } from 'styled-system';\n\nconst CustomGrid = styled(Grid)`\n  ${height};\n\n  > div {\n    ${space};\n  }\n`;\n\nexport default CustomGrid;\n","import styled from 'styled-components';\nimport { borderColor } from 'styled-system';\n\nconst Devider = styled.hr`\n  display: block;\n  height: 1px;\n  border: 0;\n  border-top: ${({ theme }) => theme.borders.light};\n  margin: 1em 0;\n  padding: 0;\n\n  ${borderColor};\n`;\n\nexport default Devider;\n","import styled from 'styled-components';\nimport { height } from 'styled-system';\n\nconst FullpageBg = styled.div`\n  background-image: url(${({ imgSrc }) => imgSrc});\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-color: ${({ theme }) => theme.colors.light};\n  ${height};\n`;\n\nexport default FullpageBg;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { color } from 'styled-system';\n\nconst OnsiteLink = styled(Link)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.primary};\n  ${color};\n\n  &:active,\n  &:focus {\n    color: ${({ theme }) => theme.colors.primary};\n  }\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\nconst OffsiteLink = styled.a`\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.primary};\n  ${color};\n\n  &:active,\n  &:focus {\n    color: ${({ theme }) => theme.colors.primary};\n  }\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst GoTo = ({ children, variant, link, ...props }) => {\n  switch (variant) {\n    case 'offsite':\n      return (\n        <OffsiteLink href={link} {...props}>\n          {children}\n        </OffsiteLink>\n      );\n    default:\n      return (\n        <OnsiteLink to={link} {...props}>\n          {children}\n        </OnsiteLink>\n      );\n  }\n};\n\nexport default GoTo;\n","import styled from 'styled-components';\nimport {\n  border,\n  borderBottom,\n  borderRadius,\n  height,\n  space,\n  textAlign,\n} from 'styled-system';\n\nconst InputContainer = styled.div`\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: ${({ theme }) => theme.borders.primary};\n  border-color: ${({ theme }) => theme.colors.primary};\n  background-color: ${({ theme }) => theme.colors.lighter};\n\n  ${border};\n  ${borderBottom};\n  ${borderRadius}\n  ${height};\n  ${space};\n\n  input,\n  textarea {\n    border: none;\n    outline: none;\n    width: 100%;\n    height: 100%;\n    padding-bottom: 4px;\n    background-color: ${({ theme }) => theme.colors.lighter};\n    font-size: ${({ theme }) => theme.typography.caption.fontSize};\n    font-family: ${({ theme }) => theme.typography.fontFamily};\n    color: ${({ theme }) => theme.colors.lightDark};\n\n    ${textAlign};\n\n    &::placeholder {\n      color: ${({ theme }) => theme.colors.placeholder};\n    }\n  }\n\n  textarea {\n    resize: none;\n    height: 95%;\n  }\n`;\n\nexport default InputContainer;\n","import styled from 'styled-components';\nimport { color, space } from 'styled-system';\n\nconst SectionHeader = styled.div`\n  padding: 16px 24px;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n\n  ${color};\n  ${space};\n`;\n\nexport default SectionHeader;\n","import styled, { css } from 'styled-components';\nimport { color, fontSize, fontWeight } from 'styled-system';\n\nconst StyledText = styled.span`\n  ${color};\n  ${fontSize};\n  ${fontWeight};\n  ${({ variant }) => {\n    switch (variant) {\n      case 'url':\n        return css`\n          cursor: pointer;\n          color: ${({ theme }) => theme.colors.primary};\n\n          ${color};\n\n          &:hover {\n            text-decoration: underline;\n          }\n        `;\n      default:\n        return '';\n    }\n  }}\n`;\n\nexport default StyledText;\n","import styled from 'styled-components';\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  font-size: ${({ theme }) => theme.typography.fontSize};\n\n  thead {\n    border-bottom: ${({ theme }) => theme.borders.light};\n  }\n\n  tr {\n    border-bottom: ${({ theme }) => theme.borders.light};\n\n    &:last-child {\n      border: none;\n    }\n  }\n\n  th {\n    font-weight: 400;\n    color: ${({ theme }) => theme.colors.primary};\n  }\n\n  td {\n    font-weight: 400;\n    font-size: ${({ theme }) => theme.typography.caption.fontSize};\n  }\n\n  th,\n  td {\n    padding: 16px;\n  }\n\n  th.text,\n  td.text {\n    text-align: left;\n  }\n\n  th.text-centered,\n  td.text-centered {\n    text-align: center;\n  }\n\n  th.number,\n  td.number {\n    text-align: right;\n  }\n`;\n\nexport default Table;\n","import styled from 'styled-components';\n\nconst TablePagination = styled.div`\n  padding: 8px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.primary};\n  border-top: ${({ theme }) => theme.borders.light};\n  font-size: ${({ theme }) => theme.typography.caption.fontSize};\n\n  p {\n    margin: 0;\n    padding: 0;\n    display: inline;\n\n    svg {\n      position: relative;\n      top: 2px;\n      cursor: pointer;\n    }\n  }\n\n  p.prev {\n    margin-right: 24px;\n  }\n\n  p.next {\n    margin-left: 24px;\n  }\n\n  p.table-pagination-info {\n    position: relative;\n\n    &.pull-to-top {\n      top: -5px;\n    }\n  }\n`;\n\nexport default TablePagination;\n","export const isDefined = (ref, path) => {\n  let name;\n  let keys = path.split('.');\n\n  if (!ref || typeof ref !== 'object') return false; //check if reference object exists or not\n\n  while ((name = keys.shift())) {\n    if (!ref.hasOwnProperty(name)) return false;\n    ref = ref[name];\n  }\n  return true;\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { color, space, textAlign } from 'styled-system';\nimport { isDefined } from '../../utils/object-utils';\n\nconst dark = 'rgba(0, 0, 0, .8)';\n\nconst H1 = styled.h1`\n  color: ${({ theme }) =>\n    isDefined(theme, 'colors.dark') ? theme.colors.dark : dark};\n  font-size: ${({ theme }) =>\n    isDefined(theme, 'typography.h1')\n      ? theme.typography.h1.fontSize\n      : '3.052em'};\n  line-height: ${({ theme }) =>\n    isDefined(theme, 'typography.h1') ? theme.typography.h1.lineHeight : 1.15};\n  font-weight: ${({ theme }) =>\n    isDefined(theme, 'typography.h1') ? theme.typography.h1.fontWeight : 700};\n  ${color};\n  ${space};\n  ${textAlign};\n`;\nconst H2 = styled.h2`\n  color: ${({ theme }) =>\n    isDefined(theme, 'colors.dark') ? theme.colors.dark : dark};\n  font-size: ${({ theme }) =>\n    isDefined(theme, 'typography.h2')\n      ? theme.typography.h2.fontSize\n      : '2.441em'};\n  line-height: ${({ theme }) =>\n    isDefined(theme, 'typography.h2') ? theme.typography.h2.lineHeight : 1.15};\n  font-weight: ${({ theme }) =>\n    isDefined(theme, 'typography.h2') ? theme.typography.h2.fontWeight : 700};\n  ${color};\n  ${space};\n  ${textAlign};\n`;\nconst H3 = styled.h3`\n  color: ${({ theme }) =>\n    isDefined(theme, 'colors.dark') ? theme.colors.dark : dark};\n  font-size: ${({ theme }) =>\n    isDefined(theme, 'typography.h3')\n      ? theme.typography.h3.fontSize\n      : '1.953em'};\n  line-height: ${({ theme }) =>\n    isDefined(theme, 'typography.h3') ? theme.typography.h3.lineHeight : 1.15};\n  font-weight: ${({ theme }) =>\n    isDefined(theme, 'typography.h3') ? theme.typography.h3.fontWeight : 700};\n  ${color};\n  ${space};\n  ${textAlign};\n`;\nconst H4 = styled.h4`\n  color: ${({ theme }) =>\n    isDefined(theme, 'colors.dark') ? theme.colors.dark : dark};\n  font-size: ${({ theme }) =>\n    isDefined(theme, 'typography.h4')\n      ? theme.typography.h4.fontSize\n      : '1.563em'};\n  line-height: ${({ theme }) =>\n    isDefined(theme, 'typography.h4') ? theme.typography.h4.lineHeight : 1.15};\n  font-weight: ${({ theme }) =>\n    isDefined(theme, 'typography.h4') ? theme.typography.h4.fontWeight : 700};\n  ${color};\n  ${space};\n  ${textAlign};\n`;\nconst H5 = styled.h5`\n  color: ${({ theme }) =>\n    isDefined(theme, 'colors.dark') ? theme.colors.dark : dark};\n  font-size: ${({ theme }) =>\n    isDefined(theme, 'typography.h5')\n      ? theme.typography.h5.fontSize\n      : '1.25em'};\n  line-height: ${({ theme }) =>\n    isDefined(theme, 'typography.h5') ? theme.typography.h5.lineHeight : 1.15};\n  font-weight: ${({ theme }) =>\n    isDefined(theme, 'typography.h5') ? theme.typography.h5.fontWeight : 700};\n  ${color};\n  ${space};\n  ${textAlign};\n`;\n\nconst H6 = styled.h6`\n  color: ${({ theme }) =>\n    isDefined(theme, 'colors.dark') ? theme.colors.dark : dark};\n  font-size: ${({ theme }) =>\n    isDefined(theme, 'typography.h6') ? theme.typography.h6.fontSize : '1em'};\n  line-height: ${({ theme }) =>\n    isDefined(theme, 'typography.h6') ? theme.typography.h6.lineHeight : 1.15};\n  font-weight: ${({ theme }) =>\n    isDefined(theme, 'typography.h6') ? theme.typography.h6.fontWeight : 700};\n  ${color};\n  ${space};\n  ${textAlign};\n`;\n\nconst P = styled.p`\n  color: ${({ theme }) =>\n    isDefined(theme, 'colors.dark') ? theme.colors.dark : dark};\n  font-size: ${({ theme }) =>\n    isDefined(theme, 'typography.body')\n      ? theme.typography.body.fontSize\n      : '1em'};\n  line-height: ${({ theme }) =>\n    isDefined(theme, 'typography.body')\n      ? theme.typography.body.lineHeight\n      : 1.45};\n  font-weight: ${({ theme }) =>\n    isDefined(theme, 'typography.body')\n      ? theme.typography.body.fontWeight\n      : 400};\n  ${color};\n  ${space};\n  ${textAlign};\n`;\n\nconst Caption = styled.p`\n  color: ${({ theme }) =>\n    isDefined(theme, 'colors.dark') ? theme.colors.dark : dark};\n  font-size: ${({ theme }) =>\n    isDefined(theme, 'typography.caption')\n      ? theme.typography.caption.fontSize\n      : '0.8em'};\n  line-height: ${({ theme }) =>\n    isDefined(theme, 'typography.caption')\n      ? theme.typography.caption.lineHeight\n      : 1.45};\n  font-weight: ${({ theme }) =>\n    isDefined(theme, 'typography.caption')\n      ? theme.typography.caption.fontWeight\n      : 400};\n  ${color};\n  ${space};\n  ${textAlign};\n`;\n\nconst RawHTML = styled.div`\n  p {\n    line-height: 1.45;\n    font-size: 1em;\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 0;\n    line-height: 1.15;\n  }\n  h1 {\n    font-size: 3.052em;\n  }\n  h2 {\n    font-size: 2.441em;\n  }\n  h3 {\n    font-size: 1.953em;\n  }\n  h4 {\n    font-size: 1.563em;\n  }\n  h5 {\n    font-size: 1.25em;\n  }\n  h6 {\n    font-size: 1em;\n  }\n\n  ${space};\n`;\n\nconst Text = ({ variant, theme, children, html, ...props }) => {\n  switch (variant) {\n    case 'h1':\n      return <H1 {...props}>{children}</H1>;\n    case 'h2':\n      return <H2 {...props}>{children}</H2>;\n    case 'h3':\n      return <H3 {...props}>{children}</H3>;\n    case 'h4':\n      return <H4 {...props}>{children}</H4>;\n    case 'h5':\n      return <H5 {...props}>{children}</H5>;\n    case 'h6':\n      return <H6 {...props}>{children}</H6>;\n    case 'caption':\n      return <Caption {...props}>{children}</Caption>;\n    case 'raw':\n      return <RawHTML dangerouslySetInnerHTML={{ __html: html }} {...props} />;\n    default:\n      return <P {...props}>{children}</P>;\n  }\n};\n\nexport default Text;\n","import React from 'react';\nimport GlobalStyle from '../styles/global-styles';\nimport { Container } from '../kits';\n\nconst DefaultLayout = ({ children }) => (\n  <Container variant=\"main\">\n    <GlobalStyle />\n    {children}\n  </Container>\n);\n\nexport default DefaultLayout;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { authActions } from '../../state/ducks/auth';\n\nimport AccountPlusIcon from 'mdi-react/AccountPlusIcon';\nimport DomainIcon from 'mdi-react/DomainIcon';\nimport HomeIcon from 'mdi-react/HomeIcon';\nimport HospitalIcon from 'mdi-react/HospitalIcon';\nimport LogoutVariantIcon from 'mdi-react/LogoutVariantIcon';\nimport MagnifyIcon from 'mdi-react/MagnifyIcon';\n\nconst MenuContainer = styled.div`\n  width: 280px;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: ${({ theme }) => theme.colors.lighter};\n\n  ul {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    list-style: none;\n    position: relative;\n  }\n`;\n\nconst MenuItem = styled.li`\n  a {\n    text-decoration: none;\n    display: flex;\n    height: 60px;\n    line-height: 60px;\n    padding: 0 24px;\n    font-size: ${({ theme }) => theme.typography.caption.fontSize};\n    border-bottom: ${({ theme }) => theme.borders.primary};\n    color: ${({ theme }) => theme.colors.primary};\n\n    &:active,\n    &:focus {\n      color: ${({ theme }) => theme.colors.primary};\n    }\n  }\n\n  a,\n  span {\n    .menu-mdi {\n      margin-top: 16px;\n      margin-right: 8px;\n    }\n  }\n\n  ${({ variant }) =>\n    variant === 'primary' &&\n    css`\n      a {\n        background-color: ${({ theme }) => theme.colors.primary};\n        color: ${({ theme }) => theme.colors.lighter};\n      }\n    `};\n  ${({ variant }) =>\n    variant === 'bottom-item' &&\n    css`\n      position: absolute;\n      bottom: 0;\n      width: 100%;\n\n      span {\n        cursor: pointer;\n        display: flex;\n        height: 60px;\n        line-height: 60px;\n        padding: 0 24px;\n        font-size: ${({ theme }) => theme.typography.caption.fontSize};\n        color: ${({ theme }) => theme.colors.primary};\n        border-top: ${({ theme }) => theme.borders.primary};\n      }\n    `};\n`;\n\nconst MainMenu = ({ logout }) => (\n  <MenuContainer>\n    <ul>\n      <MenuItem variant=\"primary\">\n        <NavLink to=\"/\">BRF Blood Bank Database</NavLink>\n      </MenuItem>\n      <MenuItem>\n        <NavLink to=\"/feeds\">\n          <HomeIcon className=\"menu-mdi\" /> Home\n        </NavLink>\n      </MenuItem>\n      <MenuItem>\n        <NavLink to=\"/search\">\n          <MagnifyIcon className=\"menu-mdi\" /> Search\n        </NavLink>\n      </MenuItem>\n      <MenuItem>\n        <NavLink to=\"/add-user\">\n          <AccountPlusIcon className=\"menu-mdi\" /> Add User\n        </NavLink>\n      </MenuItem>\n      <MenuItem>\n        <NavLink to=\"/blood-requests\">\n          <HospitalIcon className=\"menu-mdi\" /> Blood Requests\n        </NavLink>\n      </MenuItem>\n      <MenuItem>\n        <NavLink to=\"/madrasas\">\n          <DomainIcon className=\"menu-mdi\" /> Madrasas\n        </NavLink>\n      </MenuItem>\n      {/* <MenuItem>\n        <NavLink to=\"/stats\">\n          <ChartBarIcon className=\"menu-mdi\" /> Stats\n        </NavLink>\n      </MenuItem> */}\n      <MenuItem variant=\"bottom-item\" onClick={logout}>\n        <span>\n          <LogoutVariantIcon className=\"menu-mdi\" />\n          Logout\n        </span>\n      </MenuItem>\n    </ul>\n  </MenuContainer>\n);\n\nconst mapActionsToProps = {\n  logout: authActions.logout,\n};\n\nexport default connect(\n  null,\n  mapActionsToProps\n)(MainMenu);\n","import React, { Component, Fragment } from 'react';\nimport Select from 'react-select';\nimport AsyncSelect from 'react-select/async';\nimport styled from 'styled-components';\nimport { space, height } from 'styled-system';\nimport { Text } from '../kits';\n\nconst SelectContainer = styled.div`\n  ${space};\n\n  .styled__control {\n    border-color: ${({ theme }) => theme.colors.primary};\n\n    &:hover {\n      border-color: ${({ theme }) => theme.colors.primary};\n    }\n\n    ${height};\n  }\n\n  .styled__menu {\n    z-index: 10;\n  }\n\n  .styled__control--is-focused {\n    border: 1px solid ${({ theme }) => theme.colors.primary};\n    box-shadow: none;\n\n    &:hover {\n      border: 1px solid ${({ theme }) => theme.colors.primary};\n    }\n  }\n\n  .styled__placeholder {\n    color: ${({ theme }) => theme.colors.placeholder};\n  }\n\n  .styled__placeholder,\n  .styled__single-value,\n  .styled__menu {\n    font-size: ${({ theme }) => theme.typography.caption.fontSize};\n  }\n`;\n\nconst customStyles = {\n  indicatorsContainer: (provided, state) => ({\n    ...provided,\n    borderColor: 'green',\n  }),\n  option: (provided, state) => ({\n    ...provided,\n  }),\n\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n\n    return { ...provided, opacity, transition };\n  },\n};\n\nclass SelectInput extends Component {\n  handleChange = value => {\n    this.props.onChange(this.props.keyName, value);\n  };\n\n  handleBlur = () => {\n    this.props.onBlur(this.props.keyName, true);\n  };\n\n  render() {\n    return (\n      <SelectContainer\n        {...this.props.margin}\n        {...this.props.padding}\n        {...this.props.size}\n        className={this.props.selectClass}\n      >\n        {!this.props.async ? (\n          <Fragment>\n            <Select\n              {...this.props}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              styles={customStyles}\n              classNamePrefix=\"styled\"\n            />\n            {!!this.props.error && this.props.touched && (\n              <Text variant=\"caption\" color=\"error\" mt={8}>\n                {this.props.error}\n              </Text>\n            )}\n          </Fragment>\n        ) : (\n          <Fragment>\n            <AsyncSelect\n              {...this.props}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              styles={customStyles}\n              classNamePrefix=\"styled\"\n            />\n            {!!this.props.error && this.props.touched && (\n              <Text variant=\"caption\" color=\"error\" mt={8}>\n                {this.props.error}\n              </Text>\n            )}\n          </Fragment>\n        )}\n      </SelectContainer>\n    );\n  }\n}\n\nexport default SelectInput;\n","import React, { Component, Fragment } from 'react';\nimport Datepicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport styled from 'styled-components';\nimport { space } from 'styled-system';\nimport { Text } from '../kits';\n\nconst DatepickerContainer = styled.div`\n  padding: 6px 16px;\n  border-radius: 4px;\n  border: ${({ theme }) => theme.borders.primary};\n  border-color: ${({ theme }) => theme.colors.primary};\n  background-color: ${({ theme }) => theme.colors.lighter};\n\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    width: 100%;\n  }\n\n  input {\n    border: none;\n    outline: none;\n    width: 100%;\n    padding-bottom: 4px;\n    background-color: ${({ theme }) => theme.colors.lighter};\n    font-size: ${({ theme }) => theme.typography.caption.fontSize};\n    color: ${({ theme }) => theme.colors.lightDark};\n\n    &::placeholder {\n      color: ${({ theme }) => theme.colors.placeholder};\n    }\n  }\n\n  ${space};\n`;\n\nclass StyledDatepicker extends Component {\n  handleChange = value => {\n    this.props.onChange(this.props.keyName, value);\n  };\n\n  handleBlur = () => {\n    this.props.onBlur(this.props.keyName, true);\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <DatepickerContainer\n          {...this.props.margin}\n          {...this.props.padding}\n          {...this.props.size}\n        >\n          <Datepicker\n            {...this.props}\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            className=\"date-picker-input\"\n          />\n        </DatepickerContainer>\n        {!!this.props.error && this.props.touched && (\n          <Text variant=\"caption\" color=\"error\" mt={8} mb={16}>\n            {this.props.error}\n          </Text>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default StyledDatepicker;\n","import React from 'react';\nimport GlobalStyle from '../styles/global-styles';\nimport { MainMenu } from '../components';\nimport { Container } from '../kits';\n\nconst MainLayout = ({ children }) => (\n  <Container pl={280}>\n    <GlobalStyle />\n    <MainMenu />\n    <Container p={24}>{children}</Container>\n  </Container>\n);\n\nexport default MainLayout;\n","import React from 'react';\n\nimport { DefaultLayout } from '../layouts';\nimport { CustomGrid, GoTo, Text } from '../kits';\n\nconst NotFoundPage = () => (\n  <DefaultLayout>\n    <CustomGrid valign=\"center\" halign=\"justify-center\" height={`100vh`}>\n      <CustomGrid.Unit size={{ xs: 1, sm: 1 }}>\n        <Text variant=\"h4\" textAlign=\"center\">\n          (404) Not found\n        </Text>\n        <Text textAlign=\"center\" mt={16}>\n          Back to <GoTo link=\"/\">Home</GoTo>\n        </Text>\n      </CustomGrid.Unit>\n    </CustomGrid>\n  </DefaultLayout>\n);\n\nexport default NotFoundPage;\n","import * as types from './types';\n\nexport const addLocation = (data, token) => ({\n  type: types.ADD_LOCATION,\n  meta: {\n    async: true,\n    blocking: true,\n    path: `/places/`,\n    method: 'POST',\n    body: data,\n    token,\n  },\n});\n\nexport const getAllLocations = token => ({\n  type: types.GET_ALL_LOCATIONS,\n  meta: {\n    async: true,\n    blocking: true,\n    path: `/places/`,\n    method: 'GET',\n    token,\n  },\n});\n","export const ADD_LOCATION = 'locations/add_location';\nexport const ADD_LOCATION_COMPLETED = 'locations/add_location_completed';\nexport const ADD_LOCATION_FAILED = 'locations/add_location_failed';\n\nexport const GET_ALL_LOCATIONS = 'locations/get_all_locations';\nexport const GET_ALL_LOCATIONS_COMPLETED =\n  'locations/get_all_locations_completed';\nexport const GET_ALL_LOCATIONS_FAILED = 'locations/get_all_locations_failed';\n","export const generateSelectOptions = (options, keyName) => {\n  if (options && options.length) {\n    let selectOptions = [];\n    for (var i = 0; i < options.length; i++) {\n      selectOptions.push({\n        value: options[i].id,\n        label: keyName ? options[i][keyName] : options[i].name,\n      });\n    }\n\n    return selectOptions;\n  }\n\n  return [];\n};\n\nexport const generateSingleSelectOption = (option, keyName) => {\n  if (option && option.id) {\n    return {\n      value: option.id,\n      label: keyName ? option[keyName] : option.name,\n    };\n  }\n\n  return {};\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withFormik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { userActions } from '../../../state/ducks/users';\nimport { locationActions } from '../../../state/ducks/locations';\nimport { madrasaActions } from '../../../state/ducks/madrasas';\nimport { generateSelectOptions } from '../../../utils/select-option-utils';\n\nimport {\n  Button,\n  Container,\n  CustomGrid,\n  InputContainer,\n  Text,\n} from '../../kits';\nimport { SelectInput, StyledDatepicker } from '../';\n\nclass UserFormComponent extends Component {\n  state = {\n    madrasaOptions: [],\n    locationOptions: [],\n  };\n  async componentDidMount() {\n    const { getAllLocations, getAllMadrasas, token } = this.props;\n\n    let locations = await getAllLocations(token);\n    let madrasas = await getAllMadrasas(token);\n    let madrasaOptions = [],\n      locationOptions = [];\n\n    if (madrasas.count > 0) {\n      madrasaOptions = generateSelectOptions(madrasas.results);\n      this.setState({ ...this.state, madrasaOptions });\n    }\n\n    if (locations.count > 0) {\n      locationOptions = generateSelectOptions(locations.results, 'upazila');\n      this.setState({ ...this.state, locationOptions });\n    }\n  }\n\n  handleClearForm = () => {\n    const { resetForm } = this.props;\n    resetForm({\n      name: '',\n      selectedLocation: '',\n      selectedGender: '',\n      selectedRole: '',\n      selectedMadrasa: '',\n      selectedBloodGroup: '',\n      date_of_birth: '',\n      address: '',\n      mobile: '',\n      last_donated_on: '',\n      last_received_on: '',\n      emergency_contact_name: '',\n      emergency_contact_phone: '',\n    });\n  };\n\n  render() {\n    const {\n      touched,\n      errors,\n      setFieldValue,\n      setFieldTouched,\n      values,\n    } = this.props;\n\n    const { madrasaOptions, locationOptions } = this.state;\n\n    const genderOptions = [\n      { value: 'Male', label: 'Male' },\n      { value: 'Female', label: 'Female' },\n    ];\n\n    const roleOptions = [\n      { value: 'Donor', label: 'Donor' },\n      { value: 'Receiver', label: 'Receiver' },\n      { value: 'Both', label: 'Both' },\n    ];\n\n    const bloodGroups = [\n      { value: 'A+', label: 'A+' },\n      { value: 'A-', label: 'A-' },\n      { value: 'B+', label: 'B+' },\n      { value: 'B-', label: 'B-' },\n      { value: 'O+', label: 'O+' },\n      { value: 'O-', label: 'O-' },\n      { value: 'AB+', label: 'AB+' },\n      { value: 'AB-', label: 'AB-' },\n    ];\n\n    return (\n      <Container width={600} m=\"0 auto\">\n        <Form>\n          <CustomGrid>\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Name</Text>\n                <InputContainer mb={16} mt={8}>\n                  <Field type=\"text\" name=\"name\" placeholder=\"Enter fullname\" />\n                </InputContainer>\n                {touched.name && errors.name && (\n                  <Text variant=\"caption\" color=\"error\" mt={8} mb={8}>\n                    {errors.name}\n                  </Text>\n                )}\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 2 / 3 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Location</Text>\n                <SelectInput\n                  isMulti={false}\n                  value={values.selectedLocation}\n                  keyName=\"selectedLocation\"\n                  onChange={setFieldValue}\n                  onBlur={setFieldTouched}\n                  error={errors.selectedLocation}\n                  touched={touched.selectedLocation}\n                  placeholder=\"Select a location\"\n                  options={locationOptions}\n                  margin={{ mt: 8, mb: 16 }}\n                  size={{ height: 40 }}\n                />\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 3 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Blood Group</Text>\n                <SelectInput\n                  isMulti={false}\n                  value={values.selectedBloodGroup}\n                  keyName=\"selectedBloodGroup\"\n                  onChange={setFieldValue}\n                  onBlur={setFieldTouched}\n                  error={errors.selectedBloodGroup}\n                  touched={touched.selectedBloodGroup}\n                  placeholder=\"Select a group\"\n                  options={bloodGroups}\n                  margin={{ mt: 8 }}\n                  size={{ height: 40 }}\n                />\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Madrassa</Text>\n                <SelectInput\n                  isMulti={false}\n                  value={values.selectedMadrasa}\n                  keyName=\"selectedMadrasa\"\n                  onChange={setFieldValue}\n                  onBlur={setFieldTouched}\n                  error={errors.selectedMadrasa}\n                  touched={touched.selectedMadrasa}\n                  placeholder=\"Select a madrassa\"\n                  options={madrasaOptions}\n                  margin={{ mt: 8, mb: 16 }}\n                  size={{ height: 40 }}\n                />\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 2 / 3 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Date of birth</Text>\n                <StyledDatepicker\n                  keyName=\"date_of_birth\"\n                  onChange={setFieldValue}\n                  onBlur={setFieldTouched}\n                  error={errors.date_of_birth}\n                  touched={touched.date_of_birth}\n                  placeholderText=\"Add birth date\"\n                  selected={values.date_of_birth}\n                  showMonthDropdown\n                  showYearDropdown\n                  dropdownMode=\"select\"\n                  dateFormat=\"dd/MM/yyyy\"\n                  className=\"date-picker\"\n                  margin={{ mt: 8 }}\n                />\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 3 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Gender</Text>\n                <SelectInput\n                  isMulti={false}\n                  value={values.selectedGender}\n                  keyName=\"selectedGender\"\n                  onChange={setFieldValue}\n                  onBlur={setFieldTouched}\n                  error={errors.selectedGender}\n                  touched={touched.selectedGender}\n                  placeholder=\"Select gender\"\n                  options={genderOptions}\n                  margin={{ mt: 8, mb: 16 }}\n                  size={{ height: 40 }}\n                />\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 2 / 3 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Address</Text>\n                <InputContainer mb={16} mt={8}>\n                  <Field\n                    type=\"text\"\n                    name=\"address\"\n                    placeholder=\"Enter full address\"\n                  />\n                </InputContainer>\n                {touched.address && errors.address && (\n                  <Text variant=\"caption\" color=\"error\" mt={8} mb={8}>\n                    {errors.address}\n                  </Text>\n                )}\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 3 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Mobile</Text>\n                <InputContainer mb={16} mt={8}>\n                  <Field\n                    type=\"text\"\n                    name=\"mobile\"\n                    placeholder=\"Enter mobile number\"\n                  />\n                </InputContainer>\n                {touched.mobile && errors.mobile && (\n                  <Text variant=\"caption\" color=\"error\" mt={8} mb={8}>\n                    {errors.mobile}\n                  </Text>\n                )}\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 2 / 3 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Emergency contact</Text>\n                <InputContainer mb={16} mt={8}>\n                  <Field\n                    type=\"text\"\n                    name=\"emergency_contact_name\"\n                    placeholder=\"Enter contact fullname\"\n                  />\n                </InputContainer>\n                {touched.emergency_contact_name &&\n                  errors.emergency_contact_name && (\n                    <Text variant=\"caption\" color=\"error\" mt={8} mb={8}>\n                      {errors.emergency_contact_name}\n                    </Text>\n                  )}\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 3 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Contact Phone</Text>\n                <InputContainer mb={16} mt={8}>\n                  <Field\n                    type=\"text\"\n                    name=\"emergency_contact_phone\"\n                    placeholder=\"Enter mobile number\"\n                  />\n                </InputContainer>\n                {touched.emergency_contact_phone &&\n                  errors.emergency_contact_phone && (\n                    <Text variant=\"caption\" color=\"error\" mt={8} mb={8}>\n                      {errors.emergency_contact_phone}\n                    </Text>\n                  )}\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 3 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Last donated</Text>\n                <StyledDatepicker\n                  keyName=\"last_donated_on\"\n                  onChange={setFieldValue}\n                  onBlur={setFieldTouched}\n                  error={errors.last_donated_on}\n                  touched={touched.last_donated_on}\n                  placeholderText=\"Last doantion date\"\n                  selected={values.last_donated_on}\n                  showMonthDropdown\n                  showYearDropdown\n                  showTimeSelect\n                  dropdownMode=\"select\"\n                  timeFormat=\"HH:mm\"\n                  dateFormat=\"MMM d, yyyy h:mm aa\"\n                  className=\"date-picker\"\n                  margin={{ mt: 8 }}\n                />\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 3 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Last received date</Text>\n                <StyledDatepicker\n                  keyName=\"last_received_on\"\n                  onChange={setFieldValue}\n                  onBlur={setFieldTouched}\n                  error={errors.last_received_on}\n                  touched={touched.last_received_on}\n                  placeholderText=\"Last received date\"\n                  selected={values.last_received_on}\n                  showMonthDropdown\n                  showYearDropdown\n                  showTimeSelect\n                  dropdownMode=\"select\"\n                  timeFormat=\"HH:mm aa\"\n                  dateFormat=\"MMM d, yyyy h:mm aa\"\n                  className=\"date-picker\"\n                  margin={{ mt: 8 }}\n                />\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 3 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Role</Text>\n                <SelectInput\n                  isMulti={false}\n                  value={values.selectedRole}\n                  keyName=\"selectedRole\"\n                  onChange={setFieldValue}\n                  onBlur={setFieldTouched}\n                  error={errors.selectedRole}\n                  touched={touched.selectedRole}\n                  placeholder=\"Select a role\"\n                  options={roleOptions}\n                  margin={{ mt: 8, mb: 16 }}\n                  size={{ height: 40 }}\n                />\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1 / 2, sm: 1 / 2 }}>\n              <Container pl={8} pr={8}>\n                <Button\n                  mt={24}\n                  type=\"button\"\n                  onClick={this.props.onClear || this.handleClearForm}\n                >\n                  Cancel\n                </Button>\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1 / 2, sm: 1 / 2 }}>\n              <Container pl={8} pr={8}>\n                <Button type=\"submit\" variant=\"primary\" mt={24}>\n                  Add User\n                </Button>\n              </Container>\n            </CustomGrid.Unit>\n          </CustomGrid>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nconst AddUserForm = withFormik({\n  mapPropsToValues() {\n    return {\n      name: '',\n      selectedLocation: '',\n      selectedGender: '',\n      selectedRole: '',\n      selectedMadrasa: '',\n      selectedBloodGroup: '',\n      date_of_birth: '',\n      address: '',\n      mobile: '',\n      last_donated_on: '',\n      last_received_on: '',\n      emergency_contact_name: '',\n      emergency_contact_phone: '',\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('Fullname is required'),\n    selectedLocation: Yup.object().required('Location is required'),\n    selectedGender: Yup.object().required('Gender is required'),\n    selectedRole: Yup.object().required('Role is required'),\n    selectedMadrasa: Yup.object().nullable(),\n    selectedBloodGroup: Yup.object().required('Blood group is required'),\n    date_of_birth: Yup.string().required('Date of birth is required'),\n    address: Yup.string(),\n    mobile: Yup.string().required('Phone number is required'),\n    last_donated_on: Yup.date().nullable(),\n    last_received_on: Yup.date().nullable(),\n    emergency_contact_name: Yup.string().required(\n      'Emergency contact is required'\n    ),\n    emergency_contact_phone: Yup.string(),\n  }),\n  async handleSubmit(values, { props, setErrors, setSubmitting, resetForm }) {\n    try {\n      const { addUser, onAddUser, token, history } = props;\n      let data = { ...values };\n\n      data.date_of_birth = values.date_of_birth.toISOString();\n      data.blood_group = values.selectedBloodGroup.value;\n      data.role = values.selectedRole.value;\n      data.gender = values.selectedGender.value;\n      data.madrasa = values.selectedMadrasa.value;\n      data.place = values.selectedLocation.value;\n\n      if (data.date_of_birth) {\n        data.date_of_birth = data.date_of_birth.split('T')[0];\n      }\n\n      if (values.last_donated_on) {\n        data.last_donated_on = values.last_donated_on;\n      } else {\n        data.last_donated_on = null;\n      }\n\n      if (values.last_received_on) {\n        data.last_received_on = values.last_donated_on;\n      } else {\n        data.last_received_on = null;\n      }\n\n      if (onAddUser) {\n        onAddUser(data);\n      } else {\n        let newUser = await addUser(data, token);\n        setSubmitting();\n        resetForm();\n        if (newUser.id) {\n          history.push('/feeds');\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  },\n})(UserFormComponent);\n\nconst mapStateToProps = ({ auth }) => {\n  return {\n    token: auth.token,\n  };\n};\n\nconst mapActionsToProps = {\n  getAllMadrasas: madrasaActions.getAllMadrasas,\n  getAllLocations: locationActions.getAllLocations,\n  addUser: userActions.addUser,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withRouter(AddUserForm));\n","import React from 'react';\n\nimport { MainLayout } from '../layouts';\nimport { AddUserForm } from '../components/add-user';\nimport { Container, SectionHeader, Text } from '../kits';\n\nconst AddUserPage = () => (\n  <MainLayout>\n    <SectionHeader bg=\"primary\">\n      <Text variant=\"h4\" color=\"lighter\" textAlign=\"center\">\n        Add User\n      </Text>\n    </SectionHeader>\n    <Container variant=\"card\" p={24} pb={64}>\n      <AddUserForm />\n    </Container>\n  </MainLayout>\n);\n\nexport default AddUserPage;\n","import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withFormik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { userActions } from '../../../state/ducks/users';\nimport { donationActions } from '../../../state/ducks/donations';\nimport { generateSelectOptions } from '../../../utils/select-option-utils';\n\nimport {\n  Button,\n  Container,\n  CustomGrid,\n  InputContainer,\n  Text,\n} from '../../kits';\nimport { SelectInput, StyledDatepicker } from '../';\nimport { AddUserForm } from '../add-user';\n\nconst appEl = document.getElementById('root');\nModal.setAppElement(appEl);\nconst customStyles = {\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    height: '560px',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nclass CreateDonationFormComponent extends Component {\n  state = {\n    userOptions: [],\n    isModalOpen: false,\n  };\n  async componentDidMount() {\n    const { getAllUsers, token } = this.props;\n\n    let users = await getAllUsers(token, {});\n    let userOptions = [];\n\n    if (users.count > 0) {\n      userOptions = generateSelectOptions(users.results);\n      this.setState({ ...this.state, userOptions });\n    }\n  }\n\n  handleClearForm = () => {\n    const { resetForm } = this.props;\n    resetForm({\n      selectedUser: '',\n      request_date: '',\n      reason: '',\n    });\n  };\n\n  handleOpenModal = () => {\n    this.setState({ ...this.state, isModalOpen: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ ...this.state, isModalOpen: false });\n  };\n\n  handleAddUser = async data => {\n    const { addUser, getAllUsers, setFieldValue, token } = this.props;\n    let newUser = await addUser(data, token);\n\n    let users = await getAllUsers(token);\n    let userOptions = [];\n\n    if (users.count > 0) {\n      userOptions = generateSelectOptions(users.results);\n      this.setState({ ...this.state, userOptions });\n    }\n\n    if (newUser.id) {\n      setFieldValue('selectedUser', { value: newUser.id, label: newUser.name });\n      this.handleCloseModal();\n    }\n  };\n\n  render() {\n    const {\n      touched,\n      errors,\n      setFieldValue,\n      setFieldTouched,\n      values,\n    } = this.props;\n\n    const { userOptions } = this.state;\n\n    return (\n      <Container>\n        <Form>\n          <CustomGrid>\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 3 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Request for</Text>\n                <SelectInput\n                  isMulti={false}\n                  value={values.selectedUser}\n                  keyName=\"selectedUser\"\n                  onChange={setFieldValue}\n                  onBlur={setFieldTouched}\n                  error={errors.selectedUser}\n                  touched={touched.selectedUser}\n                  placeholder=\"Select a user\"\n                  options={userOptions}\n                  margin={{ mt: 8 }}\n                  size={{ height: 40 }}\n                />\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 12 }}>\n              <Text pt={32} textAlign=\"center\">\n                or\n              </Text>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 4 }}>\n              <Container mr={16}>\n                <Button\n                  variant=\"primary\"\n                  type=\"button\"\n                  mt={28}\n                  className=\"btn-small\"\n                  onClick={this.handleOpenModal}\n                >\n                  Add User\n                </Button>\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 3 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Request date</Text>\n                <StyledDatepicker\n                  keyName=\"request_date\"\n                  onChange={setFieldValue}\n                  onBlur={setFieldTouched}\n                  error={errors.request_date}\n                  touched={touched.request_date}\n                  placeholderText=\"Add request date\"\n                  selected={values.request_date}\n                  showMonthDropdown\n                  showYearDropdown\n                  showTimeSelect\n                  dropdownMode=\"select\"\n                  timeFormat=\"HH:mm\"\n                  dateFormat=\"MMM d, yyyy h:mm aa\"\n                  className=\"date-picker\"\n                  margin={{ mt: 8 }}\n                />\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 }}>\n              <Container pl={8} pr={8} mt={16}>\n                <Text variant=\"caption\">Reason</Text>\n                <InputContainer mb={16} mt={8} height={100}>\n                  <Field\n                    component=\"textarea\"\n                    name=\"reason\"\n                    placeholder=\"Enter reason\"\n                  />\n                </InputContainer>\n                {touched.reason && errors.reason && (\n                  <Text variant=\"caption\" color=\"error\" mt={8} mb={8}>\n                    {errors.reason}\n                  </Text>\n                )}\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1 / 2, sm: 1 / 2 }}>\n              <Container pl={8} pr={8}>\n                <Button\n                  mt={30}\n                  className=\"btn-small\"\n                  type=\"button\"\n                  onClick={this.handleClearForm}\n                >\n                  Clear\n                </Button>\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1 / 2, sm: 1 / 2 }}>\n              <Container pl={8} pr={8}>\n                <Button\n                  type=\"submit\"\n                  variant=\"primary\"\n                  mt={30}\n                  className=\"btn-small\"\n                >\n                  Make Request\n                </Button>\n              </Container>\n            </CustomGrid.Unit>\n          </CustomGrid>\n        </Form>\n        <Modal\n          isOpen={this.state.isModalOpen}\n          // onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.handleCloseModal}\n          style={customStyles}\n          contentLabel=\"Add User Modal\"\n        >\n          <Container>\n            <AddUserForm\n              onClear={this.handleCloseModal}\n              onAddUser={this.handleAddUser}\n            />\n          </Container>\n        </Modal>\n      </Container>\n    );\n  }\n}\n\nconst CreateDonationForm = withFormik({\n  mapPropsToValues() {\n    return {\n      selectedUser: '',\n      request_date: '',\n      reason: '',\n    };\n  },\n  validationSchema: Yup.object().shape({\n    selectedUser: Yup.object().required(),\n    request_date: Yup.string().required(),\n    reason: Yup.string().required(),\n  }),\n  async handleSubmit(values, { props, setErrors, setSubmitting, resetForm }) {\n    try {\n      const { makeRequest, getAllRequests, token } = props;\n      let data = values;\n\n      data.receiver = values.selectedUser.value;\n\n      let newRequest = await makeRequest(data, token);\n\n      setSubmitting();\n      resetForm();\n      if (newRequest.id) {\n        await getAllRequests(token);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    setSubmitting();\n  },\n})(CreateDonationFormComponent);\n\nconst mapStateToProps = ({ auth }) => {\n  return {\n    token: auth.token,\n  };\n};\n\nconst mapActionsToProps = {\n  addUser: userActions.addUser,\n  getAllUsers: userActions.getAllUsers,\n  makeRequest: donationActions.makeRequest,\n  getAllRequests: donationActions.getAllRequests,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withRouter(CreateDonationForm));\n","import React, { Fragment, useState } from 'react';\nimport { format } from 'date-fns';\nimport Modal from 'react-modal';\n\nimport { RequestDetails } from '.';\nimport { Devider, StyledText, Text } from '../../kits';\n\nconst appEl = document.getElementById('root');\nModal.setAppElement(appEl);\nconst customStyles = {\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    height: '520px',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nconst DonationRequestCard = ({ request, showDevider }) => {\n  const [showRequestDetails, setShowRequestDetails] = useState(false);\n\n  const handleCloseModal = () => {\n    setShowRequestDetails(false);\n  };\n\n  return (\n    <Fragment>\n      <Text>\n        <StyledText fontWeight=\"bold\">{request.receiver.name}</StyledText>{' '}\n        requested fro{' '}\n        <StyledText color=\"primary\" fontWeight=\"bold\">\n          {request.receiver.blood_group}\n        </StyledText>{' '}\n        blood on{' '}\n        <StyledText fontWeight=\"bold\">\n          {format(new Date(request.request_date), 'MMMM dd, yyyy', {})}\n        </StyledText>\n        .{' '}\n        <StyledText\n          variant=\"url\"\n          onClick={() => {\n            setShowRequestDetails(true);\n          }}\n        >\n          See details\n        </StyledText>\n      </Text>\n      {showDevider ? <Devider /> : ''}\n\n      <Modal\n        isOpen={showRequestDetails}\n        // onAfterOpen={this.afterOpenModal}\n        onRequestClose={() => {\n          setShowRequestDetails(false);\n        }}\n        style={customStyles}\n        contentLabel=\"Add User Modal\"\n      >\n        <RequestDetails\n          handleCloseModal={handleCloseModal}\n          requestId={request.id}\n        />\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default DonationRequestCard;\n","import React, { Component, Fragment } from 'react';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport { connect } from 'react-redux';\nimport { format } from 'date-fns';\nimport { withFormik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport { SelectInput, StyledDatepicker } from '../';\nimport {\n  Button,\n  Container,\n  CustomGrid,\n  Devider,\n  StyledText,\n  Text,\n} from '../../kits';\n\nimport { donationActions } from '../../../state/ducks/donations';\nimport { userActions } from '../../../state/ducks/users';\nimport { generateSelectOptions } from '../../../utils/select-option-utils';\n\nclass RequestDetailsContent extends Component {\n  state = {\n    requestId: undefined,\n    donorOptions: [],\n  };\n\n  async componentDidMount() {\n    const { requestId, getRequestById, getEligibleDonors, token } = this.props;\n    if (requestId !== this.state.requestId) {\n      this.setState({ ...this.state, requestId });\n      let reqInfo = await getRequestById(requestId, token);\n      let donors = await getEligibleDonors(token, {\n        blood_group: reqInfo.receiver.blood_group,\n      });\n      if (donors.count > 0) {\n        let donorOptions = generateSelectOptions(donors.results, 'mobile');\n        this.setState({ ...this.state, donorOptions });\n      }\n    }\n  }\n\n  searchEligibleDonors = async inputValue => {\n    const { requestDetails, getEligibleDonors, token } = this.props;\n    const searchDebounced = AwesomeDebouncePromise(getEligibleDonors, 500);\n    let donors = await searchDebounced(token, {\n      blood_group: requestDetails.receiver.blood_group,\n      mobile: inputValue,\n    });\n\n    if (donors.count > 0) {\n      let donorOptions = generateSelectOptions(donors.results, 'mobile');\n      this.setState({ ...this.state, donorOptions });\n      return donorOptions;\n    }\n  };\n\n  render() {\n    const {\n      requestDetails,\n      setFieldValue,\n      setFieldTouched,\n      errors,\n      touched,\n      values,\n      handleCloseModal,\n    } = this.props;\n    const { donorOptions } = this.state;\n\n    return (\n      <Fragment>\n        {requestDetails.receiver ? (\n          <Container width={560}>\n            <Text variant=\"h5\" color=\"primary\">\n              {requestDetails.receiver.name}\n            </Text>\n            <Devider />\n\n            <Text mb={8}>\n              Blood Group:{' '}\n              <StyledText color=\"primary\" fontWeight={700}>\n                {requestDetails.receiver.blood_group}\n              </StyledText>\n            </Text>\n            <Text mb={8}>\n              Request Date:{' '}\n              <StyledText color=\"primary\" fontWeight={700}>\n                {format(\n                  new Date(requestDetails.request_date),\n                  'MMMM dd, yyyy',\n                  {}\n                )}\n              </StyledText>\n            </Text>\n            <Text mb={8}>\n              Address:{' '}\n              <StyledText color=\"primary\" fontWeight={700}>\n                {requestDetails.receiver.address || 'Not mentioned'}\n              </StyledText>\n            </Text>\n            <Devider />\n            <Text mb={8}>Reason:</Text>\n            <Text color=\"primary\">\n              {requestDetails.reason || 'Not mentioned'}\n            </Text>\n            <Devider />\n            {requestDetails.is_served ? (\n              <>\n                <Text>Request has been served.</Text>\n                <Container textAlign=\"right\" mt={144}>\n                  <Button\n                    width={120}\n                    mr={16}\n                    type=\"button\"\n                    onClick={handleCloseModal}\n                  >\n                    Close\n                  </Button>\n                </Container>\n              </>\n            ) : (\n              <Form>\n                <CustomGrid mb={16}>\n                  <CustomGrid.Unit size={{ xs: 1 }}>\n                    <Text mb={8}>Select Donor:</Text>\n                    <SelectInput\n                      async\n                      isMulti={false}\n                      value={values.selectedDonor}\n                      keyName=\"selectedDonor\"\n                      onChange={setFieldValue}\n                      onBlur={setFieldTouched}\n                      error={errors.selectedDonor}\n                      touched={touched.selectedDonor}\n                      placeholder=\"Select a donor\"\n                      defaultOptions={donorOptions}\n                      loadOptions={this.searchEligibleDonors}\n                      margin={{ mt: 8 }}\n                      size={{ height: 40 }}\n                    />\n                  </CustomGrid.Unit>\n                  <CustomGrid.Unit size={{ xs: 1 }}>\n                    <Text mb={8}>Donation Date:</Text>\n                    <StyledDatepicker\n                      keyName=\"donation_date\"\n                      onChange={setFieldValue}\n                      onBlur={setFieldTouched}\n                      error={errors.donation_date}\n                      touched={touched.donation_date}\n                      placeholderText=\"Add donation date\"\n                      selected={values.donation_date}\n                      showMonthDropdown\n                      showYearDropdown\n                      showTimeSelect\n                      dropdownMode=\"select\"\n                      timeFormat=\"HH:mm\"\n                      dateFormat=\"MMM d, yyyy h:mm aa\"\n                      className=\"date-picker\"\n                      margin={{ mt: 8 }}\n                    />\n                  </CustomGrid.Unit>\n                </CustomGrid>\n                <Container textAlign=\"right\" mt={56}>\n                  <Button\n                    width={120}\n                    mr={16}\n                    type=\"button\"\n                    onClick={handleCloseModal}\n                  >\n                    Cancel\n                  </Button>{' '}\n                  <Button variant=\"primary\" width={120} type=\"submit\">\n                    Complete\n                  </Button>\n                </Container>\n              </Form>\n            )}\n          </Container>\n        ) : (\n          <Text variant=\"h5\">{'Loading...'}</Text>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst RequestDetails = withFormik({\n  mapPropsToValues() {\n    return {\n      selectedDonor: '',\n      donation_date: new Date(),\n    };\n  },\n  validationSchema: Yup.object().shape({\n    selectedDonor: Yup.object().required('Donor must be selected'),\n    donation_date: Yup.string().required('Donation date must be provided'),\n  }),\n  async handleSubmit(values, { props, setErrors, setSubmitting, resetForm }) {\n    try {\n      const {\n        handleCloseModal,\n        requestId,\n        serveRequest,\n        updateRequest,\n        updateUserInfo,\n        token,\n      } = props;\n      let data = {\n        donation_date: values.donation_date,\n        donor: values.selectedDonor.value,\n        request: requestId,\n      };\n\n      let servedReq = await serveRequest(data, token);\n      if (servedReq.id) {\n        await updateUserInfo(\n          data.donor,\n          { last_donated_on: data.donation_date },\n          token\n        );\n        await updateRequest(requestId, { is_served: true }, token);\n      }\n\n      setSubmitting();\n\n      if (servedReq.id) {\n        handleCloseModal();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    setSubmitting();\n  },\n})(RequestDetailsContent);\n\nconst mapStateToProps = ({ auth, donations, users }) => {\n  return {\n    token: auth.token,\n    requestDetails: donations.requestDetails,\n    eligibleDonors: users.eligibleDonors,\n  };\n};\n\nconst mapActionsToProps = {\n  getRequestById: donationActions.getRequestById,\n  updateRequest: donationActions.updateRequest,\n  serveRequest: donationActions.serveRequest,\n  getEligibleDonors: userActions.getEligibleDonors,\n  updateUserInfo: userActions.updateUserInfo,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(RequestDetails);\n","import React, { useState, Fragment } from 'react';\n\nimport { MainLayout } from '../layouts';\nimport {\n  CreateDonationForm,\n  DonationRequestCard,\n} from '../components/donations';\nimport { Button, Container, SectionHeader, Text } from '../kits';\n\nconst DonationPage = ({ donationRequests }) => {\n  const [showRequestForm, setShowRequestForm] = useState(false);\n\n  return (\n    <MainLayout>\n      {showRequestForm && (\n        <Fragment>\n          <Button\n            onClick={() => {\n              setShowRequestForm(false);\n            }}\n            mb={24}\n            variant=\"primary\"\n          >\n            Hide form\n          </Button>\n          <Container variant=\"card\" p={24} mb={24}>\n            <CreateDonationForm />\n          </Container>\n        </Fragment>\n      )}\n      {!showRequestForm && (\n        <Button\n          variant=\"primary\"\n          onClick={() => {\n            setShowRequestForm(true);\n          }}\n        >\n          Create new request\n        </Button>\n      )}\n      <SectionHeader bg=\"primary\" mt={24}>\n        <Text variant=\"h6\" color=\"lighter\">\n          Latest requests\n        </Text>\n      </SectionHeader>\n      <Container variant=\"card\" p={24}>\n        {donationRequests.count > 0\n          ? donationRequests.results.map((request, i) => (\n              <DonationRequestCard\n                request={request}\n                showDevider={i !== donationRequests.results.length - 1}\n                key={request.id}\n              />\n            ))\n          : ''}\n      </Container>\n    </MainLayout>\n  );\n};\n\nexport default DonationPage;\n","import React from 'react';\n\nimport { MainLayout } from '../layouts';\nimport { Container, CustomGrid, SectionHeader, Text } from '../kits';\n\nconst FeedPage = props => (\n  <MainLayout>\n    <CustomGrid>\n      <CustomGrid.Unit size={{ xs: 1 / 2, sm: 1 / 3 }}>\n        <Container mr={24}>\n          <SectionHeader bg=\"primary\">\n            <Text variant=\"body\" color=\"lighter\" textAlign=\"center\">\n              Total Users\n            </Text>\n          </SectionHeader>\n          <Container variant=\"card\" p={24}>\n            <Text textAlign=\"center\" variant=\"44\">\n              {props.users.count || 0}\n            </Text>\n          </Container>\n        </Container>\n      </CustomGrid.Unit>\n\n      <CustomGrid.Unit size={{ xs: 1 / 2, sm: 1 / 3 }}>\n        <Container mr={24}>\n          <SectionHeader bg=\"primary\">\n            <Text variant=\"body\" color=\"lighter\" textAlign=\"center\">\n              Total Madrasas\n            </Text>\n          </SectionHeader>\n          <Container variant=\"card\" p={24}>\n            <Text textAlign=\"center\" variant=\"44\">\n              {props.madrasas.count || 0}\n            </Text>\n          </Container>\n        </Container>\n      </CustomGrid.Unit>\n\n      <CustomGrid.Unit size={{ xs: 1 / 2, sm: 1 / 3 }}>\n        <Container mr={24}>\n          <SectionHeader bg=\"primary\">\n            <Text variant=\"body\" color=\"lighter\" textAlign=\"center\">\n              Total Requests\n            </Text>\n          </SectionHeader>\n          <Container variant=\"card\" p={24}>\n            <Text textAlign=\"center\" variant=\"44\">\n              {props.donationRequests.count || 0}\n            </Text>\n          </Container>\n        </Container>\n      </CustomGrid.Unit>\n    </CustomGrid>\n  </MainLayout>\n);\n\nexport default FeedPage;\n","import React from 'react';\n\nimport { Container, Text } from '../../kits';\n\nconst IntroSection = () => (\n  <Container>\n    <Text variant=\"h2\" color=\"lighter\">\n      BRF <br />\n      Blood Bank <br /> Database\n    </Text>\n    <Text variant=\"body\" color=\"lighter\">\n      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Molestias libero\n      laudantium velit doloribus numquam, corrupti! Ipsum aperiam doloribus, ad\n      saepe distinctio eius, doloremque id! Numquam minima, molestias dolorum!\n      Unde, natus.\n    </Text>\n  </Container>\n);\n\nexport default IntroSection;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFormik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { authActions } from '../../../state/ducks/auth';\n\nimport { Button, Container, InputContainer, Text } from '../../kits';\n\nclass LoginFormComponent extends Component {\n  render() {\n    const { touched, errors } = this.props;\n\n    return (\n      <Form>\n        <Container variant=\"card\" p={24} maxWidth={320}>\n          <InputContainer\n            border=\"none\"\n            borderBottom=\"1px solid #FF7275\"\n            borderRadius={0}\n            mb={16}\n            textAlign=\"center\"\n          >\n            <Field\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"username or email\"\n            />\n          </InputContainer>\n          {touched.username && errors.username && (\n            <Text variant=\"caption\" color=\"error\" mt={8} mb={8}>\n              {errors.username}\n            </Text>\n          )}\n\n          <InputContainer\n            border=\"none\"\n            borderBottom=\"1px solid #FF7275\"\n            borderRadius={0}\n            mb={16}\n            textAlign=\"center\"\n          >\n            <Field type=\"password\" name=\"password\" placeholder=\"password\" />\n          </InputContainer>\n          {touched.password && errors.password && (\n            <Text variant=\"caption\" color=\"error\" mt={8} mb={8}>\n              {errors.password}\n            </Text>\n          )}\n\n          <Button type=\"submit\" variant=\"primary\" mt={16}>\n            Login\n          </Button>\n        </Container>\n      </Form>\n    );\n  }\n}\n\nconst LoginForm = withFormik({\n  mapPropsToValues() {\n    return {\n      username: '',\n      password: '',\n    };\n  },\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required('Username is required'),\n    password: Yup.string().required('Password is required'),\n  }),\n  async handleSubmit(values, { props, setErrors, setSubmitting, resetForm }) {\n    try {\n      const { login } = props;\n      const { username, password } = values;\n      console.log(values);\n      await login({ username, password });\n\n      setSubmitting();\n    } catch (err) {\n      setErrors({ password: 'Username or password not correct' });\n    }\n    setSubmitting();\n  },\n})(LoginFormComponent);\n\nconst mapStateToProps = ({ auth }) => {\n  return {\n    isAuthenticated: auth.isAuthenticated,\n  };\n};\n\nconst mapActionsToProps = {\n  login: authActions.login,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(LoginForm);\n","import React from 'react';\n\nimport { DefaultLayout } from '../layouts';\nimport { IntroSection, LoginForm } from '../components/home';\nimport { CustomGrid, FullpageBg } from '../kits';\n\nimport bgImage from '../../assets/images/bg.svg';\n\nconst HomePage = () => (\n  <FullpageBg imgSrc={bgImage} height={`100vh`}>\n    <DefaultLayout>\n      <CustomGrid\n        valign=\"center\"\n        halign=\"justify-center\"\n        height={`100vh`}\n        p={[3, 0, 0]}\n      >\n        <CustomGrid.Unit size={{ xs: 1, sm: 1 / 3 }}>\n          <IntroSection />\n        </CustomGrid.Unit>\n        <CustomGrid.Unit size={{ xs: 1, sm: 1 / 3 }}>\n          <LoginForm />\n        </CustomGrid.Unit>\n      </CustomGrid>\n    </DefaultLayout>\n  </FullpageBg>\n);\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withFormik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { locationActions } from '../../../state/ducks/locations';\nimport { madrasaActions } from '../../../state/ducks/madrasas';\nimport { generateSelectOptions } from '../../../utils/select-option-utils';\n\nimport {\n  Button,\n  Container,\n  CustomGrid,\n  InputContainer,\n  Text,\n} from '../../kits';\nimport { SelectInput } from '../';\n\nclass UserFormComponent extends Component {\n  state = {\n    locationOptions: [],\n  };\n  async componentDidMount() {\n    const { getAllLocations, token } = this.props;\n\n    let locations = await getAllLocations(token);\n    let locationOptions = [];\n\n    if (locations.count > 0) {\n      locationOptions = generateSelectOptions(locations.results, 'upazila');\n      this.setState({ ...this.state, locationOptions });\n    }\n  }\n\n  handleClearForm = () => {\n    const { resetForm } = this.props;\n    resetForm({\n      name: '',\n      selectedLocation: '',\n      address: '',\n      phone: '',\n      contact_person: '',\n    });\n  };\n\n  render() {\n    const {\n      touched,\n      errors,\n      setFieldValue,\n      setFieldTouched,\n      values,\n    } = this.props;\n\n    const { locationOptions } = this.state;\n\n    return (\n      <Container width={600} m=\"0 auto\">\n        <Form>\n          <CustomGrid>\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Madrasa Name</Text>\n                <InputContainer mb={16} mt={8}>\n                  <Field type=\"text\" name=\"name\" placeholder=\"Enter fullname\" />\n                </InputContainer>\n                {touched.name && errors.name && (\n                  <Text variant=\"caption\" color=\"error\" mt={8} mb={8}>\n                    {errors.name}\n                  </Text>\n                )}\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 2 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Location</Text>\n                <SelectInput\n                  isMulti={false}\n                  value={values.selectedLocation}\n                  keyName=\"selectedLocation\"\n                  onChange={setFieldValue}\n                  onBlur={setFieldTouched}\n                  error={errors.selectedLocation}\n                  touched={touched.selectedLocation}\n                  placeholder=\"Select a location\"\n                  options={locationOptions}\n                  margin={{ mt: 8, mb: 16 }}\n                  size={{ height: 40 }}\n                />\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 2 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Address</Text>\n                <InputContainer mb={16} mt={8}>\n                  <Field\n                    type=\"text\"\n                    name=\"address\"\n                    placeholder=\"Enter full address\"\n                  />\n                </InputContainer>\n                {touched.address && errors.address && (\n                  <Text variant=\"caption\" color=\"error\" mt={8} mb={8}>\n                    {errors.address}\n                  </Text>\n                )}\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 2 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Mobile</Text>\n                <InputContainer mb={16} mt={8}>\n                  <Field\n                    type=\"text\"\n                    name=\"phone\"\n                    placeholder=\"Enter mobile number\"\n                  />\n                </InputContainer>\n                {touched.phone && errors.phoe && (\n                  <Text variant=\"caption\" color=\"error\" mt={8} mb={8}>\n                    {errors.phone}\n                  </Text>\n                )}\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 2 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Contact Person</Text>\n                <InputContainer mb={16} mt={8}>\n                  <Field\n                    type=\"text\"\n                    name=\"contact_person\"\n                    placeholder=\"Enter contact fullname\"\n                  />\n                </InputContainer>\n                {touched.contact_person && errors.contact_person && (\n                  <Text variant=\"caption\" color=\"error\" mt={8} mb={8}>\n                    {errors.contact_person}\n                  </Text>\n                )}\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1 / 2, sm: 1 / 2 }}>\n              <Container pl={8} pr={8}>\n                <Button\n                  mt={24}\n                  type=\"button\"\n                  onClick={this.props.onClear || this.handleClearForm}\n                >\n                  Cancel\n                </Button>\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1 / 2, sm: 1 / 2 }}>\n              <Container pl={8} pr={8}>\n                <Button type=\"submit\" variant=\"primary\" mt={24}>\n                  Add Madrasa\n                </Button>\n              </Container>\n            </CustomGrid.Unit>\n          </CustomGrid>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nconst AddUserForm = withFormik({\n  mapPropsToValues() {\n    return {\n      name: '',\n      selectedLocation: '',\n      address: '',\n      phone: '',\n      contact_person: '',\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('Madrasa name is required'),\n    selectedLocation: Yup.object().required('Location is required'),\n    address: Yup.string().required('Adress is required'),\n    phone: Yup.string(),\n    contact_person: Yup.string().required('Contact person is required'),\n  }),\n  async handleSubmit(values, { props, setErrors, setSubmitting, resetForm }) {\n    try {\n      const { addMadrasa, token, history } = props;\n      let data = values;\n\n      data.place = values.selectedLocation.value;\n\n      let newMadrasa = await addMadrasa(data, token);\n      setSubmitting();\n      resetForm();\n      if (newMadrasa.id) {\n        history.push('/feeds');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    setSubmitting();\n  },\n})(UserFormComponent);\n\nconst mapStateToProps = ({ auth }) => {\n  return {\n    token: auth.token,\n  };\n};\n\nconst mapActionsToProps = {\n  addMadrasa: madrasaActions.addMadrasa,\n  getAllMadrasas: madrasaActions.getAllMadrasas,\n  getAllLocations: locationActions.getAllLocations,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withRouter(AddUserForm));\n","import React from 'react';\n\nimport { MainLayout } from '../layouts';\nimport { AddMadrasaForm } from '../components/madrasas';\nimport { Container, SectionHeader, Text } from '../kits';\n\nconst MadrasaPage = () => (\n  <MainLayout>\n    <SectionHeader bg=\"primary\">\n      <Text variant=\"h4\" color=\"lighter\" textAlign=\"center\">\n        Add Madrasa\n      </Text>\n    </SectionHeader>\n    <Container variant=\"card\" p={24} pb={64}>\n      <AddMadrasaForm />\n    </Container>\n  </MainLayout>\n);\n\nexport default MadrasaPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withFormik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { userActions } from '../../../state/ducks/users';\nimport { locationActions } from '../../../state/ducks/locations';\nimport { madrasaActions } from '../../../state/ducks/madrasas';\nimport { generateSelectOptions } from '../../../utils/select-option-utils';\n\nimport { Button, Container, CustomGrid, Text } from '../../kits';\nimport { SelectInput } from '../';\n\nclass UserFormComponent extends Component {\n  state = {\n    madrasaOptions: [],\n    locationOptions: [],\n  };\n  async componentDidMount() {\n    const { getAllLocations, getAllMadrasas, token } = this.props;\n\n    let locations = await getAllLocations(token);\n    let madrasas = await getAllMadrasas(token);\n    let madrasaOptions = [],\n      locationOptions = [];\n\n    if (madrasas.count > 0) {\n      madrasaOptions = generateSelectOptions(madrasas.results);\n      this.setState({ ...this.state, madrasaOptions });\n    }\n\n    if (locations.count > 0) {\n      locationOptions = generateSelectOptions(locations.results, 'upazila');\n      this.setState({ ...this.state, locationOptions });\n    }\n  }\n\n  handleClearForm = () => {\n    const { resetForm, setSubmitting } = this.props;\n    setSubmitting(false);\n    resetForm();\n  };\n\n  render() {\n    const {\n      touched,\n      errors,\n      setFieldValue,\n      setFieldTouched,\n      values,\n    } = this.props;\n\n    const { madrasaOptions, locationOptions } = this.state;\n\n    const genderOptions = [\n      { value: 'Male', label: 'Male' },\n      { value: 'Female', label: 'Female' },\n    ];\n\n    const roleOptions = [\n      { value: 'Donor', label: 'Donor' },\n      { value: 'Receiver', label: 'Receiver' },\n      { value: 'Both', label: 'Both' },\n    ];\n\n    const bloodGroups = [\n      { value: 'A+', label: 'A+' },\n      { value: 'A-', label: 'A-' },\n      { value: 'B+', label: 'B+' },\n      { value: 'B-', label: 'B-' },\n      { value: 'O+', label: 'O+' },\n      { value: 'O-', label: 'O-' },\n      { value: 'AB+', label: 'AB+' },\n      { value: 'AB-', label: 'AB-' },\n    ];\n\n    return (\n      <Container>\n        <Form>\n          <CustomGrid>\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 4 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Blood Group</Text>\n                <SelectInput\n                  isMulti={false}\n                  value={values.selectedBloodGroup}\n                  keyName=\"selectedBloodGroup\"\n                  onChange={setFieldValue}\n                  onBlur={setFieldTouched}\n                  error={errors.selectedBloodGroup}\n                  touched={touched.selectedBloodGroup}\n                  placeholder=\"Select a group\"\n                  options={bloodGroups}\n                  margin={{ mt: 8 }}\n                  size={{ height: 40 }}\n                />\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 4 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Location</Text>\n                <SelectInput\n                  isMulti={false}\n                  value={values.selectedLocation}\n                  keyName=\"selectedLocation\"\n                  onChange={setFieldValue}\n                  onBlur={setFieldTouched}\n                  error={errors.selectedLocation}\n                  touched={touched.selectedLocation}\n                  placeholder=\"Select a location\"\n                  options={locationOptions}\n                  margin={{ mt: 8, mb: 16 }}\n                  size={{ height: 40 }}\n                />\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 2 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Madrassa</Text>\n                <SelectInput\n                  isMulti={false}\n                  value={values.selectedMadrasa}\n                  keyName=\"selectedMadrasa\"\n                  onChange={setFieldValue}\n                  onBlur={setFieldTouched}\n                  error={errors.selectedMadrasa}\n                  touched={touched.selectedMadrasa}\n                  placeholder=\"Select a madrassa\"\n                  options={madrasaOptions}\n                  margin={{ mt: 8, mb: 16 }}\n                  size={{ height: 40 }}\n                />\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 4 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Gender</Text>\n                <SelectInput\n                  isMulti={false}\n                  value={values.selectedGender}\n                  keyName=\"selectedGender\"\n                  onChange={setFieldValue}\n                  onBlur={setFieldTouched}\n                  error={errors.selectedGender}\n                  touched={touched.selectedGender}\n                  placeholder=\"Select gender\"\n                  options={genderOptions}\n                  margin={{ mt: 8, mb: 16 }}\n                  size={{ height: 40 }}\n                />\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1, sm: 1 / 4 }}>\n              <Container pl={8} pr={8}>\n                <Text variant=\"caption\">Role</Text>\n                <SelectInput\n                  isMulti={false}\n                  value={values.selectedRole}\n                  keyName=\"selectedRole\"\n                  onChange={setFieldValue}\n                  onBlur={setFieldTouched}\n                  error={errors.selectedRole}\n                  touched={touched.selectedRole}\n                  placeholder=\"Select a role\"\n                  options={roleOptions}\n                  margin={{ mt: 8, mb: 16 }}\n                  size={{ height: 40 }}\n                />\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1 / 2, sm: 1 / 4 }}>\n              <Container pl={8} pr={8}>\n                <Button\n                  type=\"submit\"\n                  variant=\"primary\"\n                  mt={30}\n                  className=\"btn-small\"\n                >\n                  Search\n                </Button>\n              </Container>\n            </CustomGrid.Unit>\n\n            <CustomGrid.Unit size={{ xs: 1 / 2, sm: 1 / 4 }}>\n              <Container pl={8} pr={8}>\n                <Button\n                  mt={30}\n                  className=\"btn-small\"\n                  onClick={this.handleClearForm}\n                >\n                  Clear\n                </Button>\n              </Container>\n            </CustomGrid.Unit>\n          </CustomGrid>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nconst AddUserForm = withFormik({\n  mapPropsToValues() {\n    return {\n      selectedLocation: '',\n      selectedGender: '',\n      selectedRole: '',\n      selectedMadrasa: '',\n      selectedBloodGroup: '',\n    };\n  },\n  validationSchema: Yup.object().shape({\n    selectedLocation: Yup.object(),\n    selectedGender: Yup.object(),\n    selectedRole: Yup.object(),\n    selectedMadrasa: Yup.object().nullable(),\n    selectedBloodGroup: Yup.object(),\n  }),\n  async handleSubmit(values, { props, setErrors, setSubmitting, resetForm }) {\n    try {\n      const { getAllUsers, token } = props;\n      let filter = {\n        blood_group: values.selectedBloodGroup.value || '',\n        madrasa: values.selectedMadrasa.value || '',\n        place: values.selectedLocation.value || '',\n        gender: values.selectedGender.value || '',\n        role: values.selectedRole.value || '',\n      };\n\n      getAllUsers(token, filter);\n\n      setSubmitting();\n    } catch (err) {\n      console.log(err);\n    }\n    setSubmitting();\n  },\n})(UserFormComponent);\n\nconst mapStateToProps = ({ auth }) => {\n  return {\n    token: auth.token,\n  };\n};\n\nconst mapActionsToProps = {\n  getAllMadrasas: madrasaActions.getAllMadrasas,\n  getAllLocations: locationActions.getAllLocations,\n  getAllUsers: userActions.getAllUsers,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withRouter(AddUserForm));\n","import React, { Fragment } from 'react';\nimport { format } from 'date-fns';\nimport { Table, TablePagination } from '../../kits';\n\nimport ChevronLeftIcon from 'mdi-react/ChevronLeftIcon';\nimport ChevronRightIcon from 'mdi-react/ChevronRightIcon';\n\nconst UsersTable = ({ users }) => (\n  <Fragment>\n    <Table>\n      <thead>\n        <tr>\n          <th className=\"text\">Name</th>\n          <th className=\"text\">Madrasa</th>\n          <th className=\"text-centered\">Phone</th>\n          <th className=\"text-centered\">Blood Group</th>\n          <th className=\"number\">Last Donated</th>\n        </tr>\n      </thead>\n      <tbody>\n        {users.results.map(user => {\n          return user.id ? (\n            <tr key={user.id}>\n              <td className=\"text\">{user.name}</td>\n              <td className=\"text\">{user.madrasa ? user.madrasa.name : '-'}</td>\n              <td className=\"text-centered\">{user.mobile || '-'}</td>\n              <td className=\"text-centered\">{user.blood_group}</td>\n              <td className=\"number\">\n                {user.last_donated_on\n                  ? format(new Date(user.last_donated_on), 'PPpp', {})\n                  : 'N/A'}\n              </td>\n            </tr>\n          ) : (\n            ''\n          );\n        })}\n      </tbody>\n    </Table>\n    <TablePagination>\n      {users.previous ? (\n        <p className=\"prev\">\n          <ChevronLeftIcon />\n        </p>\n      ) : (\n        ''\n      )}\n      <p\n        className={`table-pagination-info ${\n          users.next || users.previous ? 'pull-to-top' : ''\n        }`}\n      >\n        1 to {users.next ? '' : users.count} of {users.count}\n      </p>\n      {users.next ? (\n        <p className=\"next\">\n          <ChevronRightIcon />\n        </p>\n      ) : (\n        ''\n      )}\n    </TablePagination>\n  </Fragment>\n);\n\nexport default UsersTable;\n","import React from 'react';\nimport { MainLayout } from '../layouts';\nimport { SearchForm, UsersTable } from '../components/search-page';\nimport { Container, Text } from '../kits';\n\nconst SearchPage = ({ users, userMessage }) => (\n  <MainLayout>\n    <Container variant=\"card\" p={24} mb={24}>\n      <SearchForm />\n    </Container>\n    <Container variant=\"card\">\n      {users.count ? (\n        <UsersTable users={users} />\n      ) : (\n        <Text p={16} textAlign=\"center\">\n          {userMessage}\n        </Text>\n      )}\n    </Container>\n  </MainLayout>\n);\n\nexport default SearchPage;\n","import React, { Component } from 'react';\nimport { AddUserPage } from '../pages';\n\nclass UsersContainer extends Component {\n  render() {\n    return <AddUserPage />;\n  }\n}\n\nexport default UsersContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DonationPage } from '../pages';\nimport { donationActions } from '../../state/ducks/donations';\n\nclass DonationContainer extends Component {\n  componentDidMount() {\n    const { token, getAllRequests } = this.props;\n    getAllRequests(token);\n  }\n\n  render() {\n    return <DonationPage {...this.props} />;\n  }\n}\n\nconst mapStateToProps = ({ auth, donations }) => {\n  return {\n    token: auth.token,\n    donationRequests: donations.donationRequests,\n  };\n};\n\nconst mapActionsToProps = {\n  getAllRequests: donationActions.getAllRequests,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(DonationContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FeedPage } from '../pages';\nimport { userActions } from '../../state/ducks/users';\nimport { donationActions } from '../../state/ducks/donations';\nimport { madrasaActions } from '../../state/ducks/madrasas';\n\nclass FeedContainer extends Component {\n  async componentDidMount() {\n    const { getAllUsers, getAllRequests, getAllMadrasas, token } = this.props;\n    await getAllUsers(token, {});\n    await getAllRequests(token);\n    await getAllMadrasas(token);\n  }\n\n  render() {\n    return <FeedPage {...this.props} />;\n  }\n}\n\nconst mapStateToProps = ({ auth, users, donations, madrasas }) => {\n  return {\n    token: auth.token,\n    users: users.users,\n    madrasas: madrasas.madrasas,\n    donationRequests: donations.donationRequests,\n  };\n};\n\nconst mapActionsToProps = {\n  getAllUsers: userActions.getAllUsers,\n  getAllRequests: donationActions.getAllRequests,\n  getAllMadrasas: madrasaActions.getAllMadrasas,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(FeedContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { HomePage } from '../pages';\n\nclass HomeContainer extends Component {\n  render() {\n    const { isAuthenticated } = this.props;\n    return isAuthenticated ? <Redirect to=\"/feeds\" /> : <HomePage />;\n  }\n}\n\nconst mapStateToProps = ({ auth }) => {\n  return {\n    isAuthenticated: auth.isAuthenticated,\n  };\n};\n\nexport default connect(mapStateToProps)(HomeContainer);\n","import React, { Component } from 'react';\nimport { MadrasaPage } from '../pages';\n\nclass MadrasaContainer extends Component {\n  render() {\n    return <MadrasaPage />;\n  }\n}\n\nexport default MadrasaContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SearchPage } from '../pages';\nimport { userActions } from '../../state/ducks/users';\n\nclass SearchPageContainer extends Component {\n  async componentDidMount() {\n    const { getAllUsers, token } = this.props;\n    await getAllUsers(token, {});\n  }\n\n  render() {\n    const { users } = this.props;\n\n    return (\n      <SearchPage\n        users={users}\n        userMessage={users.count === 0 ? 'No user found' : 'Loading...'}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth, users }) => {\n  return {\n    token: auth.token,\n    ...users,\n  };\n};\n\nconst mapActionsToProps = {\n  getAllUsers: userActions.getAllUsers,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(SearchPageContainer);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  AddUserContainer,\n  DonationContainer,\n  FeedContainer,\n  HomeContainer,\n  MadrasaContainer,\n  SearchPageContainer,\n} from './views/containers';\nimport { NotFoundPage } from './views/pages';\nimport { withAuth } from './helpers';\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path=\"/\" component={HomeContainer} />\n    <Route exact path=\"/feeds\" component={withAuth(FeedContainer)} />\n    <Route exact path=\"/add-user\" component={withAuth(AddUserContainer)} />\n    <Route exact path=\"/madrasas\" component={withAuth(MadrasaContainer)} />\n    <Route exact path=\"/search\" component={withAuth(SearchPageContainer)} />\n    <Route\n      exact\n      path=\"/blood-requests\"\n      component={withAuth(DonationContainer)}\n    />\n    <Route component={NotFoundPage} />\n  </Switch>\n);\n\nexport default Routes;\n","export default {\n  borders: {\n    primary: '1px solid #FF7275',\n    light: '1px solid #E9EBEC',\n  },\n  typography: {\n    fontFamily: '\"IBM Plex Sans\", sans-serif',\n    fontSize: '18px',\n    lineHeight: 1.45,\n    fontWeight: '400',\n    h1: {\n      fontSize: '3.052em',\n      lineHeight: 1.15,\n      fontWeight: 700,\n      fontFamily: '\"IBM Plex Sans\", sans-serif',\n    },\n    h2: {\n      fontSize: '2.441em',\n      lineHeight: 1.15,\n      fontWeight: 700,\n      fontFamily: '\"IBM Plex Sans\", sans-serif',\n    },\n    h3: {\n      fontSize: '1.953em',\n      lineHeight: 1.15,\n      fontWeight: 700,\n      fontFamily: '\"IBM Plex Sans\", sans-serif',\n    },\n    h4: {\n      fontSize: '1.563em',\n      lineHeight: 1.15,\n      fontWeight: 700,\n      fontFamily: '\"IBM Plex Sans\", sans-serif',\n    },\n    h5: {\n      fontSize: '1.25em',\n      lineHeight: 1.15,\n      fontWeight: 700,\n      fontFamily: '\"IBM Plex Sans\", sans-serif',\n    },\n    h6: {\n      fontSize: '1em',\n      lineHeight: 1.15,\n      fontWeight: 700,\n      fontFamily: '\"IBM Plex Sans\", sans-serif',\n    },\n    body: {\n      fontSize: '1em',\n      lineHeight: 1.45,\n      fontWeight: 400,\n      fontFamily: '\"IBM Plex Sans\", sans-serif',\n    },\n    caption: {\n      fontSize: '.8em',\n      lineHeight: 1.45,\n      fontWeight: 400,\n      fontFamily: '\"IBM Plex Sans\", sans-serif',\n    },\n  },\n  colors: {\n    primary: '#FF7275',\n    secondary: '#DB5461',\n    dark: '#303334',\n    lightDark: '#4E5355',\n    light: '#EFF1F3',\n    lighter: '#FEFFFE',\n    error: '#FF3C38',\n    success: '#FFCA1E',\n    warning: '#78BE20',\n    placeholder: '#A9AEB1',\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  breakpoints: {\n    xs: 0,\n    sm: 576,\n    md: 768,\n    lg: 992,\n    xl: 1200,\n  },\n};\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport Routes from './routes';\nimport theme from './views/styles/theme';\n\nclass App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <BrowserRouter basename={window.location.pathname || ''}>\n          <Routes />\n        </BrowserRouter>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport createStore from './state/store';\nimport App from './App';\nimport { AuthService } from './helpers';\nimport * as serviceWorker from './serviceWorker';\n\nconst Auth = new AuthService();\nlet initialState = {};\n\nif (Auth.loggedIn()) {\n  initialState.auth = {\n    isAuthenticated: true,\n    token: Auth.getToken(),\n  };\n}\n\nconst store = createStore(initialState);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import jsCookie from \"js-cookie\";\nimport jsHttpCookie from \"cookie\";\n\nexport default class AuthService {\n  loggedIn = req => {\n    const token = this.getToken(req);\n    return !!token;\n  };\n\n  setUser = user => {\n    jsCookie.set(\"user\", JSON.stringify(user), { expires: 7 });\n  };\n\n  getUser = req => {\n    return process.browser\n      ? this.getUserFromBrowser()\n      : this.getUserFromServer(req);\n  };\n\n  getUserFromBrowser = () => jsCookie.get(\"user\");\n\n  getUserFromServer = req => {\n    if (req && req.headers) {\n      const cookies = req.headers.cookie;\n      if (typeof cookies === \"string\") {\n        const cookiesData = jsHttpCookie.parse(cookies);\n\n        return cookiesData.user ? JSON.parse(cookiesData.user) : {};\n      }\n      return;\n    }\n    return;\n  };\n\n  setToken = token => {\n    if (process.browser) {\n      jsCookie.set(\"Token\", token, { expires: 7 });\n    }\n  };\n\n  getToken = req => {\n    return process.browser\n      ? this.getTokenFromBrowser()\n      : this.getTokenFromServer(req);\n  };\n\n  getTokenFromBrowser = () => {\n    return jsCookie.get(\"Token\");\n  };\n\n  getTokenFromServer = req => {\n    if (req && req.headers) {\n      const cookies = req.headers.cookie;\n\n      if (typeof cookies === \"string\") {\n        const cookiesData = jsHttpCookie.parse(cookies);\n        return cookiesData.Token;\n      }\n      return;\n    }\n    return;\n  };\n\n  getCsrfToken = req => {\n    return process.browser\n      ? this.getCsrfFromBrowser()\n      : this.getCsrfFromServer(req);\n  };\n\n  getCsrfFromBrowser = () => {\n    return jsCookie.get(\"csrftoken\");\n  };\n\n  getCsrfFromServer = req => {\n    if (req && req.headers) {\n      const cookies = req.headers.cookie;\n\n      if (typeof cookies === \"string\") {\n        const cookiesData = jsHttpCookie.parse(cookies);\n        return cookiesData.csrftoken;\n      }\n      return;\n    }\n    return;\n  };\n\n  removeToken = () => {\n    jsCookie.remove(\"Token\");\n    jsCookie.remove(\"user\");\n    jsCookie.remove(\"csrftoken\");\n  };\n}\n"],"sourceRoot":""}